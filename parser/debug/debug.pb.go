// Code generated by protoc-gen-gogo.
// source: debug.proto
// DO NOT EDIT!

/*
Package debug is a generated protocol buffer package.

It is generated from these files:
	debug.proto

It has these top-level messages:
	Debug
*/
package debug

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/gogo/protobuf/gogoproto"

import github_com_gogo_protobuf_protoc_gen_gogo_descriptor "github.com/gogo/protobuf/protoc-gen-gogo/descriptor"
import github_com_gogo_protobuf_proto "github.com/gogo/protobuf/proto"
import compress_gzip "compress/gzip"
import bytes "bytes"
import io_ioutil "io/ioutil"

import strings "strings"
import reflect "reflect"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type Debug struct {
	A                int64    `protobuf:"varint,1,opt,name=A" json:"A"`
	B                []string `protobuf:"bytes,2,rep,name=B" json:"B,omitempty"`
	C                *Debug   `protobuf:"bytes,3,opt,name=C" json:"C,omitempty"`
	D                *int32   `protobuf:"varint,4,opt,name=D" json:"D,omitempty"`
	E                []*Debug `protobuf:"bytes,5,rep,name=E" json:"E,omitempty"`
	F                []uint32 `protobuf:"fixed32,6,rep,name=F" json:"F,omitempty"`
	G                *float64 `protobuf:"fixed64,7,opt,name=G" json:"G,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *Debug) Reset()                    { *m = Debug{} }
func (m *Debug) String() string            { return proto.CompactTextString(m) }
func (*Debug) ProtoMessage()               {}
func (*Debug) Descriptor() ([]byte, []int) { return fileDescriptorDebug, []int{0} }

func (m *Debug) GetA() int64 {
	if m != nil {
		return m.A
	}
	return 0
}

func (m *Debug) GetB() []string {
	if m != nil {
		return m.B
	}
	return nil
}

func (m *Debug) GetC() *Debug {
	if m != nil {
		return m.C
	}
	return nil
}

func (m *Debug) GetD() int32 {
	if m != nil && m.D != nil {
		return *m.D
	}
	return 0
}

func (m *Debug) GetE() []*Debug {
	if m != nil {
		return m.E
	}
	return nil
}

func (m *Debug) GetF() []uint32 {
	if m != nil {
		return m.F
	}
	return nil
}

func (m *Debug) GetG() float64 {
	if m != nil && m.G != nil {
		return *m.G
	}
	return 0
}

func init() {
	proto.RegisterType((*Debug)(nil), "debug.Debug")
}
func (this *Debug) Description() (desc *github_com_gogo_protobuf_protoc_gen_gogo_descriptor.FileDescriptorSet) {
	return DebugDescription()
}
func DebugDescription() (desc *github_com_gogo_protobuf_protoc_gen_gogo_descriptor.FileDescriptorSet) {
	d := &github_com_gogo_protobuf_protoc_gen_gogo_descriptor.FileDescriptorSet{}
	var gzipped = []byte{
		// 3448 bytes of a gzipped FileDescriptorSet
		0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xcc, 0x5a, 0x5b, 0x6c, 0x1b, 0xd7,
		0xb5, 0xcd, 0xf0, 0x21, 0x91, 0x9b, 0x14, 0x35, 0x3a, 0x52, 0x64, 0x5a, 0x49, 0x6c, 0x59, 0x71,
		0x6e, 0x94, 0xe4, 0x46, 0x0e, 0x1c, 0xdb, 0xb1, 0xe9, 0x9b, 0x18, 0x14, 0x45, 0x33, 0x32, 0xf4,
		0xba, 0x23, 0x29, 0x71, 0x92, 0x8f, 0xc1, 0xd1, 0xf0, 0x90, 0x1a, 0x7b, 0x38, 0xc3, 0x3b, 0x33,
		0xb4, 0x2d, 0x7f, 0x39, 0xc8, 0x7d, 0x20, 0x08, 0xee, 0xbd, 0x7d, 0x01, 0xcd, 0x3b, 0x69, 0x80,
		0x36, 0x6d, 0xfa, 0x4a, 0xfa, 0xfa, 0xe8, 0x57, 0x7f, 0xd2, 0xf6, 0xab, 0x40, 0xbe, 0x5b, 0x14,
		0x68, 0x11, 0xa0, 0xaf, 0xb4, 0x4d, 0x5b, 0x03, 0xfd, 0xf0, 0x4f, 0x71, 0x5e, 0xc3, 0xe1, 0x43,
		0x1e, 0x2a, 0x40, 0x92, 0x7e, 0x89, 0x67, 0x9f, 0xbd, 0xd6, 0x9c, 0xb3, 0xf7, 0x3e, 0x7b, 0xef,
		0x39, 0x23, 0x78, 0xfa, 0x18, 0x4c, 0xd7, 0x1d, 0xa7, 0x6e, 0x91, 0x23, 0x4d, 0xd7, 0xf1, 0x9d,
		0xad, 0x56, 0xed, 0x48, 0x95, 0x78, 0x86, 0x6b, 0x36, 0x7d, 0xc7, 0x9d, 0x63, 0x32, 0x34, 0xca,
		0x35, 0xe6, 0xa4, 0xc6, 0xcc, 0x32, 0x8c, 0x9d, 0x35, 0x2d, 0xb2, 0x10, 0x28, 0xae, 0x13, 0x1f,
		0x9d, 0x84, 0x44, 0xcd, 0xb4, 0x48, 0x5e, 0x99, 0x8e, 0xcf, 0x66, 0x8e, 0x1e, 0x9e, 0xeb, 0x02,
		0xcd, 0x75, 0x22, 0xd6, 0xa8, 0x58, 0x63, 0x88, 0x99, 0xf7, 0x13, 0x30, 0xde, 0x67, 0x16, 0x21,
		0x48, 0xd8, 0xb8, 0x41, 0x19, 0x95, 0xd9, 0xb4, 0xc6, 0x7e, 0xa3, 0x3c, 0x0c, 0x37, 0xb1, 0x71,
		0x11, 0xd7, 0x49, 0x3e, 0xc6, 0xc4, 0x72, 0x88, 0x0e, 0x00, 0x54, 0x49, 0x93, 0xd8, 0x55, 0x62,
		0x1b, 0x3b, 0xf9, 0xf8, 0x74, 0x7c, 0x36, 0xad, 0x85, 0x24, 0xe8, 0x3e, 0x18, 0x6b, 0xb6, 0xb6,
		0x2c, 0xd3, 0xd0, 0x43, 0x6a, 0x30, 0x1d, 0x9f, 0x4d, 0x6a, 0x2a, 0x9f, 0x58, 0x68, 0x2b, 0xdf,
		0x0d, 0xa3, 0x97, 0x09, 0xbe, 0x18, 0x56, 0xcd, 0x30, 0xd5, 0x1c, 0x15, 0x87, 0x14, 0x4b, 0x90,
		0x6d, 0x10, 0xcf, 0xc3, 0x75, 0xa2, 0xfb, 0x3b, 0x4d, 0x92, 0x4f, 0xb0, 0xdd, 0x4f, 0xf7, 0xec,
		0xbe, 0x7b, 0xe7, 0x19, 0x81, 0xda, 0xd8, 0x69, 0x12, 0x54, 0x84, 0x34, 0xb1, 0x5b, 0x0d, 0xce,
		0x90, 0xdc, 0xc5, 0x7e, 0x65, 0xbb, 0xd5, 0xe8, 0x66, 0x49, 0x51, 0x98, 0xa0, 0x18, 0xf6, 0x88,
		0x7b, 0xc9, 0x34, 0x48, 0x7e, 0x88, 0x11, 0xdc, 0xdd, 0x43, 0xb0, 0xce, 0xe7, 0xbb, 0x39, 0x24,
		0x0e, 0x95, 0x20, 0x4d, 0xae, 0xf8, 0xc4, 0xf6, 0x4c, 0xc7, 0xce, 0x0f, 0x33, 0x92, 0xbb, 0xfa,
		0x78, 0x91, 0x58, 0xd5, 0x6e, 0x8a, 0x36, 0x0e, 0x9d, 0x80, 0x61, 0xa7, 0xe9, 0x9b, 0x8e, 0xed,
		0xe5, 0x53, 0xd3, 0xca, 0x6c, 0xe6, 0xe8, 0xed, 0x7d, 0x03, 0x61, 0x95, 0xeb, 0x68, 0x52, 0x19,
		0x2d, 0x82, 0xea, 0x39, 0x2d, 0xd7, 0x20, 0xba, 0xe1, 0x54, 0x89, 0x6e, 0xda, 0x35, 0x27, 0x9f,
		0x66, 0x04, 0x07, 0x7b, 0x37, 0xc2, 0x14, 0x4b, 0x4e, 0x95, 0x2c, 0xda, 0x35, 0x47, 0xcb, 0x79,
		0x1d, 0x63, 0x34, 0x09, 0x43, 0xde, 0x8e, 0xed, 0xe3, 0x2b, 0xf9, 0x2c, 0x8b, 0x10, 0x31, 0x9a,
		0xf9, 0x7b, 0x12, 0x46, 0x07, 0x09, 0xb1, 0xd3, 0x90, 0xac, 0xd1, 0x5d, 0xe6, 0x63, 0x7b, 0xb1,
		0x01, 0xc7, 0x74, 0x1a, 0x71, 0xe8, 0x23, 0x1a, 0xb1, 0x08, 0x19, 0x9b, 0x78, 0x3e, 0xa9, 0xf2,
		0x88, 0x88, 0x0f, 0x18, 0x53, 0xc0, 0x41, 0xbd, 0x21, 0x95, 0xf8, 0x48, 0x21, 0x75, 0x1e, 0x46,
		0x83, 0x25, 0xe9, 0x2e, 0xb6, 0xeb, 0x32, 0x36, 0x8f, 0x44, 0xad, 0x64, 0xae, 0x2c, 0x71, 0x1a,
		0x85, 0x69, 0x39, 0xd2, 0x31, 0x46, 0x0b, 0x00, 0x8e, 0x4d, 0x9c, 0x9a, 0x5e, 0x25, 0x86, 0x95,
		0x4f, 0xed, 0x62, 0xa5, 0x55, 0xaa, 0xd2, 0x63, 0x25, 0x87, 0x4b, 0x0d, 0x0b, 0x9d, 0x6a, 0x87,
		0xda, 0xf0, 0x2e, 0x91, 0xb2, 0xcc, 0x0f, 0x59, 0x4f, 0xb4, 0x6d, 0x42, 0xce, 0x25, 0x34, 0xee,
		0x49, 0x55, 0xec, 0x2c, 0xcd, 0x16, 0x31, 0x17, 0xb9, 0x33, 0x4d, 0xc0, 0xf8, 0xc6, 0x46, 0xdc,
		0xf0, 0x10, 0xdd, 0x09, 0x81, 0x40, 0x67, 0x61, 0x05, 0x2c, 0x0b, 0x65, 0xa5, 0x70, 0x05, 0x37,
		0xc8, 0xd4, 0x49, 0xc8, 0x75, 0x9a, 0x07, 0x4d, 0x40, 0xd2, 0xf3, 0xb1, 0xeb, 0xb3, 0x28, 0x4c,
		0x6a, 0x7c, 0x80, 0x54, 0x88, 0x13, 0xbb, 0xca, 0xb2, 0x5c, 0x52, 0xa3, 0x3f, 0xa7, 0x1e, 0x82,
		0x91, 0x8e, 0xc7, 0x0f, 0x0a, 0x9c, 0x79, 0x7e, 0x08, 0x26, 0xfa, 0xc5, 0x5c, 0xdf, 0xf0, 0x9f,
		0x84, 0x21, 0xbb, 0xd5, 0xd8, 0x22, 0x6e, 0x3e, 0xce, 0x18, 0xc4, 0x08, 0x15, 0x21, 0x69, 0xe1,
		0x2d, 0x62, 0xe5, 0x13, 0xd3, 0xca, 0x6c, 0xee, 0xe8, 0x7d, 0x03, 0x45, 0xf5, 0xdc, 0x12, 0x85,
		0x68, 0x1c, 0x89, 0x1e, 0x81, 0x84, 0x48, 0x71, 0x94, 0xe1, 0xde, 0xc1, 0x18, 0x68, 0x2c, 0x6a,
		0x0c, 0x87, 0x6e, 0x83, 0x34, 0xfd, 0xcb, 0x6d, 0x3b, 0xc4, 0xd6, 0x9c, 0xa2, 0x02, 0x6a, 0x57,
		0x34, 0x05, 0x29, 0x16, 0x66, 0x55, 0x22, 0x4b, 0x43, 0x30, 0xa6, 0x8e, 0xa9, 0x92, 0x1a, 0x6e,
		0x59, 0xbe, 0x7e, 0x09, 0x5b, 0x2d, 0xc2, 0x02, 0x26, 0xad, 0x65, 0x85, 0xf0, 0x31, 0x2a, 0x43,
		0x07, 0x21, 0xc3, 0xa3, 0xd2, 0xb4, 0xab, 0xe4, 0x0a, 0xcb, 0x3e, 0x49, 0x8d, 0x07, 0xea, 0x22,
		0x95, 0xd0, 0xc7, 0x5f, 0xf0, 0x1c, 0x5b, 0xba, 0x96, 0x3d, 0x82, 0x0a, 0xd8, 0xe3, 0x1f, 0xea,
		0x4e, 0x7c, 0x77, 0xf4, 0xdf, 0x5e, 0x77, 0x2c, 0xce, 0xfc, 0x20, 0x06, 0x09, 0x76, 0xde, 0x46,
		0x21, 0xb3, 0xf1, 0xc4, 0x5a, 0x59, 0x5f, 0x58, 0xdd, 0x9c, 0x5f, 0x2a, 0xab, 0x0a, 0xca, 0x01,
		0x30, 0xc1, 0xd9, 0xa5, 0xd5, 0xe2, 0x86, 0x1a, 0x0b, 0xc6, 0x8b, 0x2b, 0x1b, 0x27, 0x8e, 0xa9,
		0xf1, 0x00, 0xb0, 0xc9, 0x05, 0x89, 0xb0, 0xc2, 0x83, 0x47, 0xd5, 0x24, 0x52, 0x21, 0xcb, 0x09,
		0x16, 0xcf, 0x97, 0x17, 0x4e, 0x1c, 0x53, 0x87, 0x3a, 0x25, 0x0f, 0x1e, 0x55, 0x87, 0xd1, 0x08,
		0xa4, 0x99, 0x64, 0x7e, 0x75, 0x75, 0x49, 0x4d, 0x05, 0x9c, 0xeb, 0x1b, 0xda, 0xe2, 0x4a, 0x45,
		0x4d, 0x07, 0x9c, 0x15, 0x6d, 0x75, 0x73, 0x4d, 0x85, 0x80, 0x61, 0xb9, 0xbc, 0xbe, 0x5e, 0xac,
		0x94, 0xd5, 0x4c, 0xa0, 0x31, 0xff, 0xc4, 0x46, 0x79, 0x5d, 0xcd, 0x76, 0x2c, 0xeb, 0xc1, 0xa3,
		0xea, 0x48, 0xf0, 0x88, 0xf2, 0xca, 0xe6, 0xb2, 0x9a, 0x43, 0x63, 0x30, 0xc2, 0x1f, 0x21, 0x17,
		0x31, 0xda, 0x25, 0x3a, 0x71, 0x4c, 0x55, 0xdb, 0x0b, 0xe1, 0x2c, 0x63, 0x1d, 0x82, 0x13, 0xc7,
		0x54, 0x34, 0x53, 0x82, 0x24, 0x8b, 0x2e, 0x84, 0x20, 0xb7, 0x54, 0x9c, 0x2f, 0x2f, 0xe9, 0xab,
		0x6b, 0x1b, 0x8b, 0xab, 0x2b, 0xc5, 0x25, 0x55, 0x69, 0xcb, 0xb4, 0xf2, 0xbf, 0x6f, 0x2e, 0x6a,
		0xe5, 0x05, 0x35, 0x16, 0x96, 0xad, 0x95, 0x8b, 0x1b, 0xe5, 0x05, 0x35, 0x3e, 0x63, 0xc0, 0x44,
		0xbf, 0x3c, 0xd3, 0xf7, 0x64, 0x84, 0x5c, 0x1c, 0xdb, 0xc5, 0xc5, 0x8c, 0xab, 0xc7, 0xc5, 0x6f,
		0x28, 0x30, 0xde, 0x27, 0xd7, 0xf6, 0x7d, 0xc8, 0x19, 0x48, 0xf2, 0x10, 0xe5, 0xd5, 0xe7, 0x9e,
		0xbe, 0x49, 0x9b, 0x05, 0x6c, 0x4f, 0x05, 0x62, 0xb8, 0x70, 0x05, 0x8e, 0xef, 0x52, 0x81, 0x29,
		0x45, 0xcf, 0x22, 0x9f, 0x51, 0x20, 0xbf, 0x1b, 0x77, 0x44, 0xa2, 0x88, 0x75, 0x24, 0x8a, 0xd3,
		0xdd, 0x0b, 0x38, 0xb4, 0xfb, 0x1e, 0x7a, 0x56, 0xf1, 0xa6, 0x02, 0x93, 0xfd, 0x1b, 0x95, 0xbe,
		0x6b, 0x78, 0x04, 0x86, 0x1a, 0xc4, 0xdf, 0x76, 0x64, 0xb1, 0xfe, 0x97, 0x3e, 0x25, 0x80, 0x4e,
		0x77, 0xdb, 0x4a, 0xa0, 0xc2, 0x35, 0x24, 0xbe, 0x5b, 0xb7, 0xc1, 0x57, 0xd3, 0xb3, 0xd2, 0x67,
		0x63, 0x70, 0x6b, 0x5f, 0xf2, 0xbe, 0x0b, 0xbd, 0x03, 0xc0, 0xb4, 0x9b, 0x2d, 0x9f, 0x17, 0x64,
		0x9e, 0x9f, 0xd2, 0x4c, 0xc2, 0xce, 0x3e, 0xcd, 0x3d, 0x2d, 0x3f, 0x98, 0x8f, 0xb3, 0x79, 0xe0,
		0x22, 0xa6, 0x70, 0xb2, 0xbd, 0xd0, 0x04, 0x5b, 0xe8, 0x81, 0x5d, 0x76, 0xda, 0x53, 0xeb, 0x1e,
		0x00, 0xd5, 0xb0, 0x4c, 0x62, 0xfb, 0xba, 0xe7, 0xbb, 0x04, 0x37, 0x4c, 0xbb, 0xce, 0x12, 0x70,
		0xaa, 0x90, 0xac, 0x61, 0xcb, 0x23, 0xda, 0x28, 0x9f, 0x5e, 0x97, 0xb3, 0x14, 0xc1, 0xaa, 0x8c,
		0x1b, 0x42, 0x0c, 0x75, 0x20, 0xf8, 0x74, 0x80, 0x98, 0x79, 0x6e, 0x18, 0x32, 0xa1, 0xb6, 0x0e,
		0x1d, 0x82, 0xec, 0x05, 0x7c, 0x09, 0xeb, 0xb2, 0x55, 0xe7, 0x96, 0xc8, 0x50, 0xd9, 0x9a, 0x68,
		0xd7, 0x1f, 0x80, 0x09, 0xa6, 0xe2, 0xb4, 0x7c, 0xe2, 0xea, 0x86, 0x85, 0x3d, 0x8f, 0x19, 0x2d,
		0xc5, 0x54, 0x11, 0x9d, 0x5b, 0xa5, 0x53, 0x25, 0x39, 0x83, 0x8e, 0xc3, 0x38, 0x43, 0x34, 0x5a,
		0x96, 0x6f, 0x36, 0x2d, 0xa2, 0xd3, 0x97, 0x07, 0x8f, 0x25, 0xe2, 0x60, 0x65, 0x63, 0x54, 0x63,
		0x59, 0x28, 0xd0, 0x15, 0x79, 0xa8, 0x02, 0x77, 0x30, 0x58, 0x9d, 0xd8, 0xc4, 0xc5, 0x3e, 0xd1,
		0xc9, 0x7f, 0xb4, 0xb0, 0xe5, 0xe9, 0xd8, 0xae, 0xea, 0xdb, 0xd8, 0xdb, 0xce, 0x4f, 0x84, 0x09,
		0xf6, 0x53, 0xdd, 0x8a, 0x50, 0x2d, 0x33, 0xcd, 0xa2, 0x5d, 0x7d, 0x14, 0x7b, 0xdb, 0xa8, 0x00,
		0x93, 0x8c, 0xc8, 0xf3, 0x5d, 0xd3, 0xae, 0xeb, 0xc6, 0x36, 0x31, 0x2e, 0xea, 0x2d, 0xbf, 0x76,
		0x32, 0x7f, 0x5b, 0x98, 0x81, 0x2d, 0x72, 0x9d, 0xe9, 0x94, 0xa8, 0xca, 0xa6, 0x5f, 0x3b, 0x89,
		0xd6, 0x21, 0x4b, 0xfd, 0xd1, 0x30, 0xaf, 0x12, 0xbd, 0xe6, 0xb8, 0xac, 0xb8, 0xe4, 0xfa, 0x1c,
		0xee, 0x90, 0x11, 0xe7, 0x56, 0x05, 0x60, 0xd9, 0xa9, 0x92, 0x42, 0x72, 0x7d, 0xad, 0x5c, 0x5e,
		0xd0, 0x32, 0x92, 0xe5, 0xac, 0xe3, 0xd2, 0x98, 0xaa, 0x3b, 0x81, 0x8d, 0x33, 0x3c, 0xa6, 0xea,
		0x8e, 0xb4, 0xf0, 0x71, 0x18, 0x37, 0x0c, 0xbe, 0x6d, 0xd3, 0xd0, 0x45, 0x97, 0xef, 0xe5, 0xd5,
		0x0e, 0x7b, 0x19, 0x46, 0x85, 0x2b, 0x88, 0x30, 0xf7, 0xd0, 0x29, 0xb8, 0xb5, 0x6d, 0xaf, 0x30,
		0x70, 0xac, 0x67, 0x97, 0xdd, 0xd0, 0xe3, 0x30, 0xde, 0xdc, 0xe9, 0x05, 0xa2, 0x8e, 0x27, 0x36,
		0x77, 0xba, 0x61, 0x77, 0xb1, 0x37, 0x37, 0x97, 0x18, 0xd8, 0x27, 0xd5, 0xfc, 0xbe, 0xb0, 0x76,
		0x68, 0x02, 0x1d, 0x01, 0xd5, 0x30, 0x74, 0x62, 0xe3, 0x2d, 0x8b, 0xe8, 0xd8, 0x25, 0x36, 0xf6,
		0xf2, 0x07, 0xc3, 0xca, 0x39, 0xc3, 0x28, 0xb3, 0xd9, 0x22, 0x9b, 0x44, 0xf7, 0xc2, 0x98, 0xb3,
		0x75, 0xc1, 0xe0, 0xc1, 0xa5, 0x37, 0x5d, 0x52, 0x33, 0xaf, 0xe4, 0x0f, 0x33, 0x33, 0x8d, 0xd2,
		0x09, 0x16, 0x5a, 0x6b, 0x4c, 0x8c, 0xee, 0x01, 0xd5, 0xf0, 0xb6, 0xb1, 0xdb, 0x64, 0xd5, 0xdd,
		0x6b, 0x62, 0x83, 0xe4, 0xef, 0xe2, 0xaa, 0x5c, 0xbe, 0x22, 0xc5, 0xe8, 0x3c, 0x4c, 0xb4, 0x6c,
		0xd3, 0xf6, 0x89, 0xdb, 0x74, 0x09, 0x6d, 0xd2, 0xf9, 0x49, 0xcb, 0xff, 0x66, 0x78, 0x97, 0x36,
		0x7b, 0x33, 0xac, 0xcd, 0xbd, 0xab, 0x8d, 0xb7, 0x7a, 0x85, 0x33, 0x05, 0xc8, 0x86, 0x9d, 0x8e,
		0xd2, 0xc0, 0xdd, 0xae, 0x2a, 0xb4, 0x86, 0x96, 0x56, 0x17, 0x68, 0xf5, 0x7b, 0xb2, 0xac, 0xc6,
		0x68, 0x15, 0x5e, 0x5a, 0xdc, 0x28, 0xeb, 0xda, 0xe6, 0xca, 0xc6, 0xe2, 0x72, 0x59, 0x8d, 0xdf,
		0x9b, 0x4e, 0xfd, 0x76, 0x58, 0xbd, 0x76, 0xed, 0xda, 0xb5, 0xd8, 0xcc, 0xbb, 0x31, 0xc8, 0x75,
		0x76, 0xbe, 0xe8, 0xdf, 0x60, 0x9f, 0x7c, 0x4d, 0xf5, 0x88, 0xaf, 0x5f, 0x36, 0x5d, 0x16, 0x87,
		0x0d, 0xcc, 0x7b, 0xc7, 0xc0, 0x84, 0x13, 0x42, 0x6b, 0x9d, 0xf8, 0x8f, 0x9b, 0x2e, 0x8d, 0xb2,
		0x06, 0xf6, 0xd1, 0x12, 0x1c, 0xb4, 0x1d, 0xdd, 0xf3, 0xb1, 0x5d, 0xc5, 0x6e, 0x55, 0x6f, 0x5f,
		0x10, 0xe8, 0xd8, 0x30, 0x88, 0xe7, 0x39, 0xbc, 0x04, 0x04, 0x2c, 0xb7, 0xdb, 0xce, 0xba, 0x50,
		0x6e, 0xe7, 0xc6, 0xa2, 0x50, 0xed, 0x72, 0x77, 0x7c, 0x37, 0x77, 0xdf, 0x06, 0xe9, 0x06, 0x6e,
		0xea, 0xc4, 0xf6, 0xdd, 0x1d, 0xd6, 0xaf, 0xa5, 0xb4, 0x54, 0x03, 0x37, 0xcb, 0x74, 0xfc, 0xf1,
		0xf9, 0x20, 0x6c, 0xc7, 0x5f, 0xc4, 0x21, 0x1b, 0xee, 0xd9, 0x68, 0x0b, 0x6c, 0xb0, 0xfc, 0xac,
		0xb0, 0xe3, 0x7b, 0xe7, 0x4d, 0x3b, 0xbc, 0xb9, 0x12, 0x4d, 0xdc, 0x85, 0x21, 0xde, 0x49, 0x69,
		0x1c, 0x49, 0x8b, 0x26, 0x3d, 0xb0, 0x84, 0xf7, 0xe7, 0x29, 0x4d, 0x8c, 0x50, 0x05, 0x86, 0x2e,
		0x78, 0x8c, 0x7b, 0x88, 0x71, 0x1f, 0xbe, 0x39, 0xf7, 0xb9, 0x75, 0x46, 0x9e, 0x3e, 0xb7, 0xae,
		0xaf, 0xac, 0x6a, 0xcb, 0xc5, 0x25, 0x4d, 0xc0, 0xd1, 0x7e, 0x48, 0x58, 0xf8, 0xea, 0x4e, 0x67,
		0x8a, 0x67, 0xa2, 0x41, 0x0d, 0xbf, 0x1f, 0x12, 0x97, 0x09, 0xbe, 0xd8, 0x99, 0x58, 0x99, 0xe8,
		0x63, 0x0c, 0xfd, 0x23, 0x90, 0x64, 0xf6, 0x42, 0x00, 0xc2, 0x62, 0xea, 0x2d, 0x28, 0x05, 0x89,
		0xd2, 0xaa, 0x46, 0xc3, 0x5f, 0x85, 0x2c, 0x97, 0xea, 0x6b, 0x8b, 0xe5, 0x52, 0x59, 0x8d, 0xcd,
		0x1c, 0x87, 0x21, 0x6e, 0x04, 0x7a, 0x34, 0x02, 0x33, 0xa8, 0xb7, 0x88, 0xa1, 0xe0, 0x50, 0xe4,
		0xec, 0xe6, 0xf2, 0x7c, 0x59, 0x53, 0x63, 0x61, 0xf7, 0x7a, 0x90, 0x0d, 0xb7, 0x6b, 0x9f, 0x4c,
		0x4c, 0xfd, 0x50, 0x81, 0x4c, 0xa8, 0xfd, 0xa2, 0x85, 0x1f, 0x5b, 0x96, 0x73, 0x59, 0xc7, 0x96,
		0x89, 0x3d, 0x11, 0x14, 0xc0, 0x44, 0x45, 0x2a, 0x19, 0xd4, 0x69, 0x9f, 0xc8, 0xe2, 0x5f, 0x55,
		0x40, 0xed, 0x6e, 0xdd, 0xba, 0x16, 0xa8, 0x7c, 0xaa, 0x0b, 0x7c, 0x59, 0x81, 0x5c, 0x67, 0xbf,
		0xd6, 0xb5, 0xbc, 0x43, 0x9f, 0xea, 0xf2, 0x5e, 0x52, 0x60, 0xa4, 0xa3, 0x4b, 0xfb, 0xa7, 0x5a,
		0xdd, 0x8b, 0x71, 0x18, 0xef, 0x83, 0x43, 0x45, 0xd1, 0xce, 0xf2, 0x0e, 0xfb, 0xfe, 0x41, 0x9e,
		0x35, 0x47, 0xab, 0xe5, 0x1a, 0x76, 0x7d, 0xd1, 0xfd, 0xde, 0x03, 0xaa, 0x59, 0x25, 0xb6, 0x6f,
		0xd6, 0x4c, 0xe2, 0x8a, 0x57, 0x70, 0xde, 0xe3, 0x8e, 0xb6, 0xe5, 0xfc, 0x2d, 0xfc, 0x5f, 0x01,
		0x35, 0x1d, 0xcf, 0xf4, 0xcd, 0x4b, 0x44, 0x37, 0x6d, 0xf9, 0xbe, 0x4e, 0x7b, 0xde, 0x84, 0xa6,
		0xca, 0x99, 0x45, 0xdb, 0x0f, 0xb4, 0x6d, 0x52, 0xc7, 0x5d, 0xda, 0x34, 0xf7, 0xc5, 0x35, 0x55,
		0xce, 0x04, 0xda, 0x87, 0x20, 0x5b, 0x75, 0x5a, 0xb4, 0x7d, 0xe0, 0x7a, 0x34, 0xd5, 0x2a, 0x5a,
		0x86, 0xcb, 0x02, 0x15, 0xd1, 0xdf, 0xb5, 0x2f, 0x0a, 0xb2, 0x5a, 0x86, 0xcb, 0xb8, 0xca, 0xdd,
		0x30, 0x8a, 0xeb, 0x75, 0x97, 0x92, 0x4b, 0x22, 0xde, 0xb4, 0xe6, 0x02, 0x31, 0x53, 0x9c, 0x3a,
		0x07, 0x29, 0x69, 0x07, 0x5a, 0xcd, 0xa8, 0x25, 0xf4, 0x26, 0xbf, 0xae, 0x89, 0xcd, 0xa6, 0xb5,
		0x94, 0x2d, 0x27, 0x0f, 0x41, 0xd6, 0xf4, 0xf4, 0xf6, 0xbd, 0x61, 0x6c, 0x3a, 0x36, 0x9b, 0xd2,
		0x32, 0xa6, 0x17, 0x5c, 0x14, 0xcd, 0xbc, 0x19, 0x83, 0x5c, 0xe7, 0xbd, 0x27, 0x5a, 0x80, 0x94,
		0xe5, 0x18, 0x98, 0x05, 0x02, 0xbf, 0x74, 0x9f, 0x8d, 0xb8, 0x2a, 0x9d, 0x5b, 0x12, 0xfa, 0x5a,
		0x80, 0x9c, 0xfa, 0x99, 0x02, 0x29, 0x29, 0x46, 0x93, 0x90, 0x68, 0x62, 0x7f, 0x9b, 0xd1, 0x25,
		0xe7, 0x63, 0xaa, 0xa2, 0xb1, 0x31, 0x95, 0x7b, 0x4d, 0x6c, 0xb3, 0x10, 0x10, 0x72, 0x3a, 0xa6,
		0x7e, 0xb5, 0x08, 0xae, 0xb2, 0x76, 0xd8, 0x69, 0x34, 0x88, 0xed, 0x7b, 0xd2, 0xaf, 0x42, 0x5e,
		0x12, 0x62, 0x74, 0x1f, 0x8c, 0xf9, 0x2e, 0x36, 0xad, 0x0e, 0xdd, 0x04, 0xd3, 0x55, 0xe5, 0x44,
		0xa0, 0x5c, 0x80, 0xfd, 0x92, 0xb7, 0x4a, 0x7c, 0x6c, 0x6c, 0x93, 0x6a, 0x1b, 0x34, 0xc4, 0x2e,
		0xd5, 0xf6, 0x09, 0x85, 0x05, 0x31, 0x2f, 0xb1, 0x33, 0xef, 0x29, 0x30, 0x26, 0x1b, 0xf8, 0x6a,
		0x60, 0xac, 0x65, 0x00, 0x6c, 0xdb, 0x8e, 0x1f, 0x36, 0x57, 0x6f, 0x28, 0xf7, 0xe0, 0xe6, 0x8a,
		0x01, 0x48, 0x0b, 0x11, 0x4c, 0x35, 0x00, 0xda, 0x33, 0xbb, 0x9a, 0xed, 0x20, 0x64, 0xc4, 0xa5,
		0x36, 0xfb, 0x32, 0xc2, 0xdf, 0xfa, 0x80, 0x8b, 0x68, 0xa7, 0x8f, 0x26, 0x20, 0xb9, 0x45, 0xea,
		0xa6, 0x2d, 0xae, 0xda, 0xf8, 0x40, 0x5e, 0xe0, 0x25, 0x82, 0x0b, 0xbc, 0xf9, 0xa7, 0x60, 0xdc,
		0x70, 0x1a, 0xdd, 0xcb, 0x9d, 0x57, 0xbb, 0xde, 0x3c, 0xbd, 0x47, 0x95, 0x27, 0xa1, 0xdd, 0x9d,
		0xbd, 0xae, 0x28, 0x6f, 0xc4, 0xe2, 0x95, 0xb5, 0xf9, 0xb7, 0x62, 0x53, 0x15, 0x0e, 0x5d, 0x93,
		0x3b, 0xd5, 0x48, 0xcd, 0x22, 0x06, 0x5d, 0x3d, 0xbc, 0x76, 0x18, 0xee, 0xaf, 0x9b, 0xfe, 0x76,
		0x6b, 0x6b, 0xce, 0x70, 0x1a, 0x47, 0xea, 0x4e, 0xdd, 0x69, 0x7f, 0x0c, 0xa2, 0x23, 0x36, 0x60,
		0xbf, 0xc4, 0x07, 0xa1, 0x74, 0x20, 0x9d, 0x8a, 0xfc, 0x7a, 0x54, 0x58, 0x81, 0x71, 0xa1, 0xac,
		0xb3, 0x1b, 0x69, 0xde, 0x87, 0xa3, 0x9b, 0xde, 0x4a, 0xe4, 0xdf, 0x79, 0x9f, 0x55, 0x3a, 0x6d,
		0x4c, 0x40, 0xe9, 0x1c, 0xef, 0xd4, 0x0b, 0x1a, 0xdc, 0xda, 0xc1, 0xc7, 0x8f, 0x26, 0x71, 0x23,
		0x18, 0xdf, 0x15, 0x8c, 0xe3, 0x21, 0xc6, 0x75, 0x01, 0x2d, 0x94, 0x60, 0x64, 0x2f, 0x5c, 0x3f,
		0x16, 0x5c, 0x59, 0x12, 0x26, 0xa9, 0xc0, 0x28, 0x23, 0x31, 0x5a, 0x9e, 0xef, 0x34, 0x58, 0xde,
		0xbb, 0x39, 0xcd, 0x4f, 0xde, 0xe7, 0x67, 0x25, 0x47, 0x61, 0xa5, 0x00, 0x55, 0x78, 0x0c, 0x26,
		0xa8, 0x84, 0xa5, 0x96, 0x30, 0x5b, 0xf4, 0x3d, 0x4a, 0xfe, 0xbd, 0x67, 0xf8, 0x91, 0x1a, 0x0f,
		0x08, 0x42, 0xbc, 0x21, 0x4f, 0xd4, 0x89, 0xef, 0x13, 0xd7, 0xd3, 0xb1, 0x65, 0xa1, 0x9b, 0x7e,
		0xa1, 0xc9, 0xbf, 0xf0, 0x41, 0xa7, 0x27, 0x2a, 0x1c, 0x59, 0xb4, 0xac, 0xc2, 0x26, 0xec, 0xeb,
		0xe3, 0xd9, 0x01, 0x38, 0x5f, 0x14, 0x9c, 0x13, 0x3d, 0xde, 0xa5, 0xb4, 0x6b, 0x20, 0xe5, 0x81,
		0x3f, 0x06, 0xe0, 0x7c, 0x49, 0x70, 0x22, 0x81, 0x95, 0x6e, 0xa1, 0x8c, 0xe7, 0x60, 0xec, 0x12,
		0x71, 0xb7, 0x1c, 0x4f, 0xbc, 0xfc, 0x0f, 0x40, 0xf7, 0xb2, 0xa0, 0x1b, 0x15, 0x40, 0x76, 0x15,
		0x40, 0xb9, 0x4e, 0x41, 0xaa, 0x86, 0x0d, 0x32, 0x00, 0xc5, 0x2b, 0x82, 0x62, 0x98, 0xea, 0x53,
		0x68, 0x11, 0xb2, 0x75, 0x47, 0x54, 0x97, 0x68, 0xf8, 0xab, 0x02, 0x9e, 0x91, 0x18, 0x41, 0xd1,
		0x74, 0x9a, 0x2d, 0x8b, 0x96, 0x9e, 0x68, 0x8a, 0xd7, 0x24, 0x85, 0xc4, 0x08, 0x8a, 0x3d, 0x98,
		0xf5, 0x75, 0x49, 0xe1, 0x85, 0xec, 0x79, 0x06, 0x32, 0x8e, 0x6d, 0xed, 0x38, 0xf6, 0x20, 0x8b,
		0xf8, 0x92, 0x60, 0x00, 0x01, 0xa1, 0x04, 0xa7, 0x21, 0x3d, 0xa8, 0x23, 0xbe, 0x2c, 0xe0, 0x29,
		0x22, 0x3d, 0x50, 0x81, 0x51, 0x99, 0x64, 0x4c, 0xc7, 0x1e, 0x80, 0xe2, 0x2b, 0x82, 0x22, 0x17,
		0x82, 0x89, 0x6d, 0xf8, 0xc4, 0xf3, 0xeb, 0x64, 0x10, 0x92, 0x37, 0xe5, 0x36, 0x04, 0x44, 0x98,
		0x72, 0x8b, 0xd8, 0xc6, 0xf6, 0x60, 0x0c, 0x5f, 0x95, 0xa6, 0x94, 0x18, 0x4a, 0x51, 0x82, 0x91,
		0x06, 0x76, 0xbd, 0x6d, 0x6c, 0x0d, 0xe4, 0x8e, 0xaf, 0x09, 0x8e, 0x6c, 0x00, 0x12, 0x16, 0x69,
		0xd9, 0x7b, 0xa1, 0x79, 0x4b, 0x5a, 0x24, 0x04, 0x13, 0x47, 0xcf, 0xf3, 0xd9, 0xfd, 0xca, 0x5e,
		0xd8, 0xbe, 0x2e, 0x8f, 0x1e, 0xc7, 0x2e, 0x87, 0x19, 0x4f, 0x43, 0xda, 0x33, 0xaf, 0x0e, 0x44,
		0xf3, 0x0d, 0xe9, 0x69, 0x06, 0xa0, 0xe0, 0x27, 0x60, 0x7f, 0xdf, 0x54, 0x3f, 0x00, 0xd9, 0x37,
		0x05, 0xd9, 0x64, 0x9f, 0x74, 0x2f, 0x52, 0xc2, 0x5e, 0x29, 0xbf, 0x25, 0x53, 0x02, 0xe9, 0xe2,
		0x5a, 0xa3, 0xdd, 0xb9, 0x87, 0x6b, 0x7b, 0xb3, 0xda, 0xb7, 0xa5, 0xd5, 0x38, 0xb6, 0xc3, 0x6a,
		0x1b, 0x30, 0x29, 0x18, 0xf7, 0xe6, 0xd7, 0xb7, 0x65, 0x62, 0xe5, 0xe8, 0xcd, 0x4e, 0xef, 0x3e,
		0x05, 0x53, 0x81, 0x39, 0x65, 0x63, 0xe9, 0xe9, 0x0d, 0xdc, 0x1c, 0x80, 0xf9, 0x1d, 0xc1, 0x2c,
		0x33, 0x7e, 0xd0, 0x99, 0x7a, 0xcb, 0xb8, 0x49, 0xc9, 0xcf, 0x43, 0x5e, 0x92, 0xb7, 0x6c, 0x97,
		0x18, 0x4e, 0xdd, 0x36, 0xaf, 0x92, 0xea, 0x00, 0xd4, 0xdf, 0xe9, 0x72, 0xd5, 0x66, 0x08, 0x4e,
		0x99, 0x17, 0x41, 0x0d, 0xfa, 0x0d, 0xdd, 0x6c, 0x34, 0x1d, 0xd7, 0x8f, 0x60, 0xfc, 0xae, 0xf4,
		0x54, 0x80, 0x5b, 0x64, 0xb0, 0x42, 0x19, 0x72, 0x6c, 0x38, 0x68, 0x48, 0x7e, 0x4f, 0x10, 0x8d,
		0xb4, 0x51, 0x22, 0x71, 0x18, 0x4e, 0xa3, 0x89, 0xdd, 0x41, 0xf2, 0xdf, 0xf7, 0x65, 0xe2, 0x10,
		0x10, 0x1e, 0x7d, 0xa3, 0x5d, 0x95, 0x18, 0x45, 0x7d, 0xbc, 0xce, 0x3f, 0x7d, 0x5d, 0x9c, 0xd9,
		0xce, 0x42, 0x5c, 0x58, 0xa2, 0xe6, 0xe9, 0x2c, 0x97, 0xd1, 0x64, 0xcf, 0x5c, 0x0f, 0x2c, 0xd4,
		0x51, 0x2d, 0x0b, 0x67, 0x61, 0xa4, 0xa3, 0x54, 0x46, 0x53, 0xfd, 0xa7, 0xa0, 0xca, 0x86, 0x2b,
		0x65, 0xe1, 0x38, 0x24, 0x68, 0xd9, 0x8b, 0x86, 0xff, 0x97, 0x80, 0x33, 0xf5, 0xc2, 0xc3, 0x90,
		0x92, 0xe5, 0x2e, 0x1a, 0xfa, 0xdf, 0x02, 0x1a, 0x40, 0x28, 0x5c, 0x96, 0xba, 0x68, 0xf8, 0xff,
		0x48, 0xb8, 0x84, 0x50, 0xf8, 0xe0, 0x26, 0xfc, 0xd1, 0x73, 0x09, 0x91, 0xae, 0xa4, 0xed, 0x4e,
		0xc3, 0xb0, 0xa8, 0x71, 0xd1, 0xe8, 0x67, 0xc5, 0xc3, 0x25, 0xa2, 0xf0, 0x10, 0x24, 0x07, 0x34,
		0xf8, 0xff, 0x0a, 0x28, 0xd7, 0x2f, 0x94, 0x20, 0x13, 0xaa, 0x6b, 0xd1, 0xf0, 0xff, 0x13, 0xf0,
		0x30, 0x8a, 0x2e, 0x5d, 0xd4, 0xb5, 0x68, 0x82, 0xff, 0x97, 0x4b, 0x17, 0x08, 0x6a, 0x36, 0x59,
		0xd2, 0xa2, 0xd1, 0x9f, 0x91, 0x56, 0x97, 0x90, 0xc2, 0x19, 0x48, 0x07, 0x69, 0x2a, 0x1a, 0xff,
		0x59, 0x81, 0x6f, 0x63, 0xa8, 0x05, 0x42, 0x69, 0x32, 0x9a, 0xe2, 0x73, 0xd2, 0x02, 0x21, 0x14,
		0x3d, 0x46, 0xdd, 0xa5, 0x2f, 0x9a, 0xe9, 0xf3, 0xf2, 0x18, 0x75, 0x55, 0x3e, 0xea, 0x4d, 0x96,
		0x2d, 0xa2, 0x29, 0xbe, 0x20, 0xbd, 0xc9, 0xf4, 0xe9, 0x32, 0xba, 0x6b, 0x49, 0x34, 0xc7, 0x17,
		0xe5, 0x32, 0xba, 0x4a, 0x49, 0x61, 0x0d, 0x50, 0x6f, 0x1d, 0x89, 0xe6, 0x7b, 0x5e, 0xf0, 0x8d,
		0xf5, 0x94, 0x91, 0xc2, 0xe3, 0x30, 0xd9, 0xbf, 0x86, 0x44, 0xb3, 0xbe, 0x70, 0xbd, 0xab, 0xeb,
		0x0f, 0x97, 0x90, 0xc2, 0x46, 0xbb, 0xeb, 0x0f, 0xd7, 0x8f, 0x68, 0xda, 0x17, 0xaf, 0x77, 0xbe,
		0xd8, 0x85, 0xcb, 0x47, 0xa1, 0x08, 0xd0, 0x4e, 0xdd, 0xd1, 0x5c, 0x2f, 0x0b, 0xae, 0x10, 0x88,
		0x1e, 0x0d, 0x91, 0xb9, 0xa3, 0xf1, 0xaf, 0xc8, 0xa3, 0x21, 0x10, 0x85, 0xd3, 0x90, 0xb2, 0x5b,
		0x96, 0x45, 0x83, 0x03, 0xdd, 0xfc, 0x1f, 0x42, 0xf2, 0xbf, 0xbb, 0x21, 0x0e, 0x86, 0x04, 0x14,
		0x8e, 0x43, 0x92, 0x34, 0xb6, 0x48, 0x35, 0x0a, 0xf9, 0xfb, 0x1b, 0x32, 0x21, 0x50, 0xed, 0xc2,
		0x19, 0x00, 0xfe, 0xd2, 0xc8, 0xbe, 0x07, 0x44, 0x60, 0xff, 0x70, 0x43, 0x7c, 0x6b, 0x6e, 0x43,
		0xda, 0x04, 0xfc, 0xcb, 0xf5, 0xcd, 0x09, 0x3e, 0xe8, 0x24, 0x60, 0x2f, 0x9a, 0xa7, 0x60, 0xf8,
		0x82, 0xe7, 0xd8, 0x3e, 0xae, 0x47, 0xa1, 0xff, 0x28, 0xd0, 0x52, 0x9f, 0x1a, 0xac, 0xe1, 0xb8,
		0xc4, 0xc7, 0x75, 0x2f, 0x0a, 0xfb, 0x27, 0x81, 0x0d, 0x00, 0x14, 0x6c, 0x60, 0xcf, 0x1f, 0x64,
		0xdf, 0x7f, 0x96, 0x60, 0x09, 0xa0, 0x8b, 0xa6, 0xbf, 0x2f, 0x92, 0x9d, 0x28, 0xec, 0x87, 0x72,
		0xd1, 0x42, 0xbf, 0xf0, 0x30, 0xa4, 0xe9, 0x4f, 0xfe, 0xff, 0x17, 0x11, 0xe0, 0xbf, 0x08, 0x70,
		0x1b, 0x41, 0x9f, 0xec, 0xf9, 0x55, 0xdf, 0x8c, 0x36, 0xf6, 0x5f, 0x85, 0xa7, 0xa5, 0x7e, 0xa1,
		0x08, 0x19, 0xcf, 0xaf, 0x56, 0x5b, 0x2e, 0xbf, 0x88, 0x8a, 0x80, 0xff, 0xed, 0x46, 0xf0, 0x32,
		0x17, 0x60, 0xe6, 0x0f, 0xf5, 0xbf, 0x5b, 0x82, 0x8a, 0x53, 0x71, 0xf8, 0xad, 0x12, 0xfc, 0x5c,
		0xa1, 0x35, 0x66, 0xab, 0x55, 0x17, 0xf7, 0x3f, 0x49, 0x36, 0x98, 0xda, 0xdb, 0xad, 0xd1, 0xcc,
		0x73, 0x0a, 0x24, 0x17, 0x28, 0x10, 0x21, 0x50, 0x8a, 0xec, 0x4b, 0x41, 0x7c, 0x3e, 0xf1, 0xd3,
		0x5f, 0x1e, 0xbc, 0x45, 0x53, 0x8a, 0x28, 0x0b, 0xca, 0x3c, 0xbb, 0x5f, 0x4c, 0x6b, 0xca, 0x3c,
		0x9a, 0x02, 0xa5, 0x24, 0xfe, 0x23, 0x23, 0x3b, 0xc7, 0x1f, 0xcd, 0xa0, 0x9a, 0x52, 0xa2, 0x9a,
		0x0b, 0xe2, 0x72, 0x4c, 0x59, 0xa0, 0x9a, 0x65, 0xf1, 0x7f, 0x89, 0x5d, 0x9a, 0x65, 0xaa, 0x79,
		0x96, 0x5d, 0x17, 0x0e, 0x6b, 0xca, 0x59, 0x3a, 0xaa, 0xb0, 0xfb, 0x5c, 0x45, 0x53, 0x2a, 0xf3,
		0xa9, 0x0f, 0x7f, 0x75, 0x40, 0x79, 0xfb, 0xd7, 0x07, 0x94, 0x7f, 0x04, 0x00, 0x00, 0xff, 0xff,
		0x69, 0x38, 0xfa, 0x0a, 0x04, 0x2d, 0x00, 0x00,
	}
	r := bytes.NewReader(gzipped)
	gzipr, err := compress_gzip.NewReader(r)
	if err != nil {
		panic(err)
	}
	ungzipped, err := io_ioutil.ReadAll(gzipr)
	if err != nil {
		panic(err)
	}
	if err := github_com_gogo_protobuf_proto.Unmarshal(ungzipped, d); err != nil {
		panic(err)
	}
	return d
}
func (this *Debug) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 11)
	s = append(s, "&debug.Debug{")
	s = append(s, "A: "+fmt.Sprintf("%#v", this.A)+",\n")
	if this.B != nil {
		s = append(s, "B: "+fmt.Sprintf("%#v", this.B)+",\n")
	}
	if this.C != nil {
		s = append(s, "C: "+fmt.Sprintf("%#v", this.C)+",\n")
	}
	if this.D != nil {
		s = append(s, "D: "+valueToGoStringDebug(this.D, "int32")+",\n")
	}
	if this.E != nil {
		s = append(s, "E: "+fmt.Sprintf("%#v", this.E)+",\n")
	}
	if this.F != nil {
		s = append(s, "F: "+fmt.Sprintf("%#v", this.F)+",\n")
	}
	if this.G != nil {
		s = append(s, "G: "+valueToGoStringDebug(this.G, "float64")+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func valueToGoStringDebug(v interface{}, typ string) string {
	rv := reflect.ValueOf(v)
	if rv.IsNil() {
		return "nil"
	}
	pv := reflect.Indirect(rv).Interface()
	return fmt.Sprintf("func(v %v) *%v { return &v } ( %#v )", typ, typ, pv)
}

func init() { proto.RegisterFile("debug.proto", fileDescriptorDebug) }

var fileDescriptorDebug = []byte{
	// 191 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0xe2, 0x4e, 0x49, 0x4d, 0x2a,
	0x4d, 0xd7, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x05, 0x73, 0xa4, 0x74, 0xd3, 0x33, 0x4b,
	0x32, 0x4a, 0x93, 0xf4, 0x92, 0xf3, 0x73, 0xf5, 0xd3, 0xf3, 0xd3, 0xf3, 0xf5, 0xc1, 0xb2, 0x49,
	0xa5, 0x69, 0x60, 0x1e, 0x98, 0x03, 0x66, 0x41, 0x74, 0x29, 0x75, 0x33, 0x72, 0xb1, 0xba, 0x80,
	0x34, 0x0a, 0x09, 0x71, 0x31, 0x3a, 0x4a, 0x30, 0x2a, 0x30, 0x6a, 0x30, 0x3b, 0xb1, 0x9c, 0xb8,
	0x27, 0xcf, 0x10, 0xc4, 0xe8, 0x28, 0xc4, 0xc3, 0xc5, 0xe8, 0x24, 0xc1, 0xa4, 0xc0, 0xac, 0xc1,
	0x19, 0xc4, 0xe8, 0x24, 0x24, 0xc5, 0xc5, 0xe8, 0x2c, 0xc1, 0xac, 0xc0, 0xa8, 0xc1, 0x6d, 0xc4,
	0xa3, 0x07, 0xb1, 0x1a, 0xac, 0x35, 0x88, 0xd1, 0x19, 0xa4, 0xd2, 0x45, 0x82, 0x45, 0x81, 0x51,
	0x83, 0x35, 0x88, 0xd1, 0x05, 0xa4, 0xd2, 0x55, 0x82, 0x55, 0x81, 0x19, 0x53, 0xa5, 0x2b, 0x48,
	0xa5, 0x9b, 0x04, 0x9b, 0x02, 0xb3, 0x06, 0x7b, 0x10, 0xa3, 0x1b, 0x88, 0xe7, 0x2e, 0xc1, 0xae,
	0xc0, 0xa8, 0xc1, 0x18, 0xc4, 0xe8, 0xee, 0xc4, 0xf1, 0xe1, 0xa1, 0x1c, 0xe3, 0x86, 0x47, 0x72,
	0x8c, 0x80, 0x00, 0x00, 0x00, 0xff, 0xff, 0x71, 0xc5, 0xc3, 0xcb, 0xdb, 0x00, 0x00, 0x00,
}
