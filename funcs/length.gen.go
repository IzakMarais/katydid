// Code generated by funcs-gen.
// DO NOT EDIT!

package funcs

type lenFloat64s struct {
	E Float64s
}

func (this *lenFloat64s) Eval(buf []byte) int64 {
	return int64(len(this.E.Eval(buf)))
}

func init() {
	Register("length", new(lenFloat64s))
}

type lenFloat32s struct {
	E Float32s
}

func (this *lenFloat32s) Eval(buf []byte) int64 {
	return int64(len(this.E.Eval(buf)))
}

func init() {
	Register("length", new(lenFloat32s))
}

type lenInt64s struct {
	E Int64s
}

func (this *lenInt64s) Eval(buf []byte) int64 {
	return int64(len(this.E.Eval(buf)))
}

func init() {
	Register("length", new(lenInt64s))
}

type lenUint64s struct {
	E Uint64s
}

func (this *lenUint64s) Eval(buf []byte) int64 {
	return int64(len(this.E.Eval(buf)))
}

func init() {
	Register("length", new(lenUint64s))
}

type lenInt32s struct {
	E Int32s
}

func (this *lenInt32s) Eval(buf []byte) int64 {
	return int64(len(this.E.Eval(buf)))
}

func init() {
	Register("length", new(lenInt32s))
}

type lenUint32s struct {
	E Uint32s
}

func (this *lenUint32s) Eval(buf []byte) int64 {
	return int64(len(this.E.Eval(buf)))
}

func init() {
	Register("length", new(lenUint32s))
}

type lenBools struct {
	E Bools
}

func (this *lenBools) Eval(buf []byte) int64 {
	return int64(len(this.E.Eval(buf)))
}

func init() {
	Register("length", new(lenBools))
}

type lenStrings struct {
	E Strings
}

func (this *lenStrings) Eval(buf []byte) int64 {
	return int64(len(this.E.Eval(buf)))
}

func init() {
	Register("length", new(lenStrings))
}

type lenListOfBytes struct {
	E ListOfBytes
}

func (this *lenListOfBytes) Eval(buf []byte) int64 {
	return int64(len(this.E.Eval(buf)))
}

func init() {
	Register("length", new(lenListOfBytes))
}

type lenString struct {
	E String
}

func (this *lenString) Eval(buf []byte) int64 {
	return int64(len(this.E.Eval(buf)))
}

func init() {
	Register("length", new(lenString))
}

type lenBytes struct {
	E Bytes
}

func (this *lenBytes) Eval(buf []byte) int64 {
	return int64(len(this.E.Eval(buf)))
}

func init() {
	Register("length", new(lenBytes))
}
