// Code generated by funcs-gen.
// DO NOT EDIT!

package funcs

type lenFloat64s struct {
	E Float64s
}

func (this *lenFloat64s) Eval() int64 {
	return int64(len(this.E.Eval()))
}

func init() {
	Register("length", new(lenFloat64s))
}

func LenFloat64s(e Float64s) Int64 {
	return &lenFloat64s{E: e}
}

type lenInt64s struct {
	E Int64s
}

func (this *lenInt64s) Eval() int64 {
	return int64(len(this.E.Eval()))
}

func init() {
	Register("length", new(lenInt64s))
}

func LenInt64s(e Int64s) Int64 {
	return &lenInt64s{E: e}
}

type lenUint64s struct {
	E Uint64s
}

func (this *lenUint64s) Eval() int64 {
	return int64(len(this.E.Eval()))
}

func init() {
	Register("length", new(lenUint64s))
}

func LenUint64s(e Uint64s) Int64 {
	return &lenUint64s{E: e}
}

type lenBools struct {
	E Bools
}

func (this *lenBools) Eval() int64 {
	return int64(len(this.E.Eval()))
}

func init() {
	Register("length", new(lenBools))
}

func LenBools(e Bools) Int64 {
	return &lenBools{E: e}
}

type lenStrings struct {
	E Strings
}

func (this *lenStrings) Eval() int64 {
	return int64(len(this.E.Eval()))
}

func init() {
	Register("length", new(lenStrings))
}

func LenStrings(e Strings) Int64 {
	return &lenStrings{E: e}
}

type lenListOfBytes struct {
	E ListOfBytes
}

func (this *lenListOfBytes) Eval() int64 {
	return int64(len(this.E.Eval()))
}

func init() {
	Register("length", new(lenListOfBytes))
}

func LenListOfBytes(e ListOfBytes) Int64 {
	return &lenListOfBytes{E: e}
}

type lenString struct {
	E String
}

func (this *lenString) Eval() int64 {
	return int64(len(this.E.Eval()))
}

func init() {
	Register("length", new(lenString))
}

func LenString(e String) Int64 {
	return &lenString{E: e}
}

type lenBytes struct {
	E Bytes
}

func (this *lenBytes) Eval() int64 {
	return int64(len(this.E.Eval()))
}

func init() {
	Register("length", new(lenBytes))
}

func LenBytes(e Bytes) Int64 {
	return &lenBytes{E: e}
}
