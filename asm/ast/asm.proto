//  Copyright 2013 Walter Schulze
//
//  Licensed under the Apache License, Version 2.0 (the "License");
//  you may not use this file except in compliance with the License.
//  You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
//  Unless required by applicable law or agreed to in writing, software
//  distributed under the License is distributed on an "AS IS" BASIS,
//  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//  See the License for the specific language governing permissions and
//  limitations under the License.

package ast;

import "code.google.com/p/gogoprotobuf/gogoproto/gogo.proto";
import "github.com/awalterschulze/katydid/types/types.proto";

option (gogoproto.goproto_stringer_all) = false;
option (gogoproto.gostring_all) = true;

message Rules {
	optional Init Root = 1;
	repeated Init Init = 2;
	repeated Transition Transition = 3;
	repeated IfExpr IfExpr = 4;
}

message Init {
	optional string Package = 1 [(gogoproto.nullable) = false];
	optional string Message = 2 [(gogoproto.nullable) = false];
	optional string State = 4 [(gogoproto.nullable) = false];
}

message Transition {
	optional string Src = 1 [(gogoproto.nullable) = false];
	optional string Input = 2 [(gogoproto.nullable) = false];
	optional string Dst = 3 [(gogoproto.nullable) = false];
}

message IfExpr {
	optional Expr Condition = 1;
	optional StateExpr Then = 2;
	optional StateExpr Else = 3;
}

message StateExpr {
	option (gogoproto.union) = true;
	optional string State = 1;
	optional IfExpr IfExpr = 2;
}

message Expr {
	option (gogoproto.union) = true;
	optional Terminal Terminal = 1;
	optional List List = 2;
	optional Function Function = 3;
}

message List {
	optional types.Type Type = 1;
	repeated Expr Elems = 2;
}

message Function {
	optional string Name = 1 [(gogoproto.nullable) = false];
	repeated Expr Params = 2;
}

message Terminal {
	option (gogoproto.union) = true;
	optional double DoubleValue = 1;
	optional float FloatValue = 2;
	optional int64 Int64Value = 3;
	optional uint64 Uint64Value = 4;
	optional int32 Int32Value = 5;

	optional bool BoolValue = 8;
	optional string StringValue = 9;

	optional bytes BytesValue = 12;
	optional uint32 Uint32Value = 13;

	optional Variable Variable = 50;
}

message Variable {
	optional string Package  = 1 [(gogoproto.nullable) = false];
	optional string Message = 2 [(gogoproto.nullable) = false];
	optional string Field = 3 [(gogoproto.nullable) = false];
}

