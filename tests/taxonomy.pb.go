// Code generated by protoc-gen-gogo.
// source: taxonomy.proto
// DO NOT EDIT!

/*
Package tests is a generated protocol buffer package.

It is generated from these files:
	taxonomy.proto

It has these top-level messages:
	TaxonomyDatabase
	Entry
	Records
	Reference
	Link
	GeneticCode
	CommentAndReference
	GenomeInformation
	ExternalInformationResources
*/
package tests

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/gogo/protobuf/gogoproto"

import "github.com/gogo/protobuf/protoc-gen-gogo/descriptor"

import strings "strings"
import github_com_gogo_protobuf_proto "github.com/gogo/protobuf/proto"
import sort "sort"
import strconv "strconv"
import reflect "reflect"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type GenomeInformationType int32

const (
	GenomeInformationType_NONE  GenomeInformationType = 1
	GenomeInformationType_BLAST GenomeInformationType = 2
)

var GenomeInformationType_name = map[int32]string{
	1: "NONE",
	2: "BLAST",
}
var GenomeInformationType_value = map[string]int32{
	"NONE":  1,
	"BLAST": 2,
}

func (x GenomeInformationType) Enum() *GenomeInformationType {
	p := new(GenomeInformationType)
	*p = x
	return p
}
func (x GenomeInformationType) String() string {
	return proto.EnumName(GenomeInformationType_name, int32(x))
}
func (x *GenomeInformationType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(GenomeInformationType_value, data, "GenomeInformationType")
	if err != nil {
		return err
	}
	*x = GenomeInformationType(value)
	return nil
}

type Subject int32

const (
	Subject_Unknown          Subject = 1
	Subject_OrganismSpecific Subject = 2
)

var Subject_name = map[int32]string{
	1: "Unknown",
	2: "OrganismSpecific",
}
var Subject_value = map[string]int32{
	"Unknown":          1,
	"OrganismSpecific": 2,
}

func (x Subject) Enum() *Subject {
	p := new(Subject)
	*p = x
	return p
}
func (x Subject) String() string {
	return proto.EnumName(Subject_name, int32(x))
}
func (x *Subject) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Subject_value, data, "Subject")
	if err != nil {
		return err
	}
	*x = Subject(value)
	return nil
}

type TaxonomyDatabase struct {
	Entries          []*Entry `protobuf:"bytes,1,rep,name=Entries" json:"Entries,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *TaxonomyDatabase) Reset()         { *m = TaxonomyDatabase{} }
func (m *TaxonomyDatabase) String() string { return proto.CompactTextString(m) }
func (*TaxonomyDatabase) ProtoMessage()    {}

func (m *TaxonomyDatabase) GetEntries() []*Entry {
	if m != nil {
		return m.Entries
	}
	return nil
}

type Entry struct {
	TaxonomyId                   *string                         `protobuf:"bytes,1,opt,name=TaxonomyId" json:"TaxonomyId,omitempty"`
	InheritedBlastName           *string                         `protobuf:"bytes,2,opt,name=InheritedBlastName" json:"InheritedBlastName,omitempty"`
	Rank                         *string                         `protobuf:"bytes,3,opt,name=Rank" json:"Rank,omitempty"`
	GeneticCode                  *GeneticCode                    `protobuf:"bytes,4,opt,name=GeneticCode" json:"GeneticCode,omitempty"`
	OtherNames                   []string                        `protobuf:"bytes,5,rep,name=OtherNames" json:"OtherNames,omitempty"`
	Synonym                      *string                         `protobuf:"bytes,6,opt,name=Synonym" json:"Synonym,omitempty"`
	Lineage                      []*Link                         `protobuf:"bytes,7,rep,name=Lineage" json:"Lineage,omitempty"`
	CommentsAndReferences        []*CommentAndReference          `protobuf:"bytes,8,rep,name=CommentsAndReferences" json:"CommentsAndReferences,omitempty"`
	GenomeInformation            *GenomeInformation              `protobuf:"bytes,9,opt,name=GenomeInformation" json:"GenomeInformation,omitempty"`
	ExternalInformationResources []*ExternalInformationResources `protobuf:"bytes,10,rep,name=ExternalInformationResources" json:"ExternalInformationResources,omitempty"`
	Records                      []*Records                      `protobuf:"bytes,11,rep,name=Records" json:"Records,omitempty"`
	XXX_unrecognized             []byte                          `json:"-"`
}

func (m *Entry) Reset()         { *m = Entry{} }
func (m *Entry) String() string { return proto.CompactTextString(m) }
func (*Entry) ProtoMessage()    {}

func (m *Entry) GetTaxonomyId() string {
	if m != nil && m.TaxonomyId != nil {
		return *m.TaxonomyId
	}
	return ""
}

func (m *Entry) GetInheritedBlastName() string {
	if m != nil && m.InheritedBlastName != nil {
		return *m.InheritedBlastName
	}
	return ""
}

func (m *Entry) GetRank() string {
	if m != nil && m.Rank != nil {
		return *m.Rank
	}
	return ""
}

func (m *Entry) GetGeneticCode() *GeneticCode {
	if m != nil {
		return m.GeneticCode
	}
	return nil
}

func (m *Entry) GetOtherNames() []string {
	if m != nil {
		return m.OtherNames
	}
	return nil
}

func (m *Entry) GetSynonym() string {
	if m != nil && m.Synonym != nil {
		return *m.Synonym
	}
	return ""
}

func (m *Entry) GetLineage() []*Link {
	if m != nil {
		return m.Lineage
	}
	return nil
}

func (m *Entry) GetCommentsAndReferences() []*CommentAndReference {
	if m != nil {
		return m.CommentsAndReferences
	}
	return nil
}

func (m *Entry) GetGenomeInformation() *GenomeInformation {
	if m != nil {
		return m.GenomeInformation
	}
	return nil
}

func (m *Entry) GetExternalInformationResources() []*ExternalInformationResources {
	if m != nil {
		return m.ExternalInformationResources
	}
	return nil
}

func (m *Entry) GetRecords() []*Records {
	if m != nil {
		return m.Records
	}
	return nil
}

type Records struct {
	DatabaseName     *string      `protobuf:"bytes,1,opt,name=DatabaseName" json:"DatabaseName,omitempty"`
	References       []*Reference `protobuf:"bytes,2,rep,name=References" json:"References,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *Records) Reset()         { *m = Records{} }
func (m *Records) String() string { return proto.CompactTextString(m) }
func (*Records) ProtoMessage()    {}

func (m *Records) GetDatabaseName() string {
	if m != nil && m.DatabaseName != nil {
		return *m.DatabaseName
	}
	return ""
}

func (m *Records) GetReferences() []*Reference {
	if m != nil {
		return m.References
	}
	return nil
}

type Reference struct {
	Name             *Link   `protobuf:"bytes,1,opt,name=Name" json:"Name,omitempty"`
	Accession        *string `protobuf:"bytes,2,opt,name=Accession" json:"Accession,omitempty"`
	GI               *string `protobuf:"bytes,3,opt,name=GI" json:"GI,omitempty"`
	Links            []*Link `protobuf:"bytes,4,rep,name=Links" json:"Links,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Reference) Reset()         { *m = Reference{} }
func (m *Reference) String() string { return proto.CompactTextString(m) }
func (*Reference) ProtoMessage()    {}

func (m *Reference) GetName() *Link {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *Reference) GetAccession() string {
	if m != nil && m.Accession != nil {
		return *m.Accession
	}
	return ""
}

func (m *Reference) GetGI() string {
	if m != nil && m.GI != nil {
		return *m.GI
	}
	return ""
}

func (m *Reference) GetLinks() []*Link {
	if m != nil {
		return m.Links
	}
	return nil
}

type Link struct {
	Name             *string `protobuf:"bytes,1,opt,name=Name" json:"Name,omitempty"`
	Link             *string `protobuf:"bytes,2,opt,name=Link" json:"Link,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Link) Reset()         { *m = Link{} }
func (m *Link) String() string { return proto.CompactTextString(m) }
func (*Link) ProtoMessage()    {}

func (m *Link) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *Link) GetLink() string {
	if m != nil && m.Link != nil {
		return *m.Link
	}
	return ""
}

type GeneticCode struct {
	TranslationTable *int32  `protobuf:"varint,1,opt,name=TranslationTable" json:"TranslationTable,omitempty"`
	Type             *string `protobuf:"bytes,2,opt,name=Type" json:"Type,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *GeneticCode) Reset()         { *m = GeneticCode{} }
func (m *GeneticCode) String() string { return proto.CompactTextString(m) }
func (*GeneticCode) ProtoMessage()    {}

func (m *GeneticCode) GetTranslationTable() int32 {
	if m != nil && m.TranslationTable != nil {
		return *m.TranslationTable
	}
	return 0
}

func (m *GeneticCode) GetType() string {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ""
}

type CommentAndReference struct {
	Heading          *string `protobuf:"bytes,1,opt,name=Heading" json:"Heading,omitempty"`
	Content          *string `protobuf:"bytes,2,opt,name=Content" json:"Content,omitempty"`
	Reference        *Link   `protobuf:"bytes,3,opt,name=Reference" json:"Reference,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CommentAndReference) Reset()         { *m = CommentAndReference{} }
func (m *CommentAndReference) String() string { return proto.CompactTextString(m) }
func (*CommentAndReference) ProtoMessage()    {}

func (m *CommentAndReference) GetHeading() string {
	if m != nil && m.Heading != nil {
		return *m.Heading
	}
	return ""
}

func (m *CommentAndReference) GetContent() string {
	if m != nil && m.Content != nil {
		return *m.Content
	}
	return ""
}

func (m *CommentAndReference) GetReference() *Link {
	if m != nil {
		return m.Reference
	}
	return nil
}

type GenomeInformation struct {
	Type             *GenomeInformationType `protobuf:"varint,1,opt,name=Type,enum=tests.GenomeInformationType" json:"Type,omitempty"`
	Programs         []*Link                `protobuf:"bytes,2,rep,name=Programs" json:"Programs,omitempty"`
	XXX_unrecognized []byte                 `json:"-"`
}

func (m *GenomeInformation) Reset()         { *m = GenomeInformation{} }
func (m *GenomeInformation) String() string { return proto.CompactTextString(m) }
func (*GenomeInformation) ProtoMessage()    {}

func (m *GenomeInformation) GetType() GenomeInformationType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return GenomeInformationType_NONE
}

func (m *GenomeInformation) GetPrograms() []*Link {
	if m != nil {
		return m.Programs
	}
	return nil
}

type ExternalInformationResources struct {
	LinkOut          *Link    `protobuf:"bytes,1,opt,name=LinkOut" json:"LinkOut,omitempty"`
	Subject          *Subject `protobuf:"varint,2,opt,name=Subject,enum=tests.Subject" json:"Subject,omitempty"`
	LinkOutProvider  *Link    `protobuf:"bytes,3,opt,name=LinkOutProvider" json:"LinkOutProvider,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *ExternalInformationResources) Reset()         { *m = ExternalInformationResources{} }
func (m *ExternalInformationResources) String() string { return proto.CompactTextString(m) }
func (*ExternalInformationResources) ProtoMessage()    {}

func (m *ExternalInformationResources) GetLinkOut() *Link {
	if m != nil {
		return m.LinkOut
	}
	return nil
}

func (m *ExternalInformationResources) GetSubject() Subject {
	if m != nil && m.Subject != nil {
		return *m.Subject
	}
	return Subject_Unknown
}

func (m *ExternalInformationResources) GetLinkOutProvider() *Link {
	if m != nil {
		return m.LinkOutProvider
	}
	return nil
}

func init() {
	proto.RegisterType((*TaxonomyDatabase)(nil), "tests.TaxonomyDatabase")
	proto.RegisterType((*Entry)(nil), "tests.Entry")
	proto.RegisterType((*Records)(nil), "tests.Records")
	proto.RegisterType((*Reference)(nil), "tests.Reference")
	proto.RegisterType((*Link)(nil), "tests.Link")
	proto.RegisterType((*GeneticCode)(nil), "tests.GeneticCode")
	proto.RegisterType((*CommentAndReference)(nil), "tests.CommentAndReference")
	proto.RegisterType((*GenomeInformation)(nil), "tests.GenomeInformation")
	proto.RegisterType((*ExternalInformationResources)(nil), "tests.ExternalInformationResources")
	proto.RegisterEnum("tests.GenomeInformationType", GenomeInformationType_name, GenomeInformationType_value)
	proto.RegisterEnum("tests.Subject", Subject_name, Subject_value)
}
func (this *TaxonomyDatabase) Description() (desc *descriptor.FileDescriptorSet) {
	return TaxonomyDescription()
}
func TaxonomyDescription() (desc *descriptor.FileDescriptorSet) {
	return &descriptor.FileDescriptorSet{File: []*descriptor.FileDescriptorProto{{Name: func(v string) *string { return &v }("google/protobuf/descriptor.proto"),
		Package: func(v string) *string { return &v }("google.protobuf"),
		MessageType: []*descriptor.DescriptorProto{{Name: func(v string) *string { return &v }("FileDescriptorSet"),
			Field: []*descriptor.FieldDescriptorProto{{Name: func(v string) *string { return &v }("file"),
				Number:   func(v int32) *int32 { return &v }(1),
				Label:    func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(3),
				Type:     func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(11),
				TypeName: func(v string) *string { return &v }(".google.protobuf.FileDescriptorProto"),
			}},
		}, {Name: func(v string) *string { return &v }("FileDescriptorProto"),
			Field: []*descriptor.FieldDescriptorProto{{Name: func(v string) *string { return &v }("name"),
				Number: func(v int32) *int32 { return &v }(1),
				Label:  func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(1),
				Type:   func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(9),
			}, {Name: func(v string) *string { return &v }("package"),
				Number: func(v int32) *int32 { return &v }(2),
				Label:  func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(1),
				Type:   func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(9),
			}, {Name: func(v string) *string { return &v }("dependency"),
				Number: func(v int32) *int32 { return &v }(3),
				Label:  func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(3),
				Type:   func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(9),
			}, {Name: func(v string) *string { return &v }("public_dependency"),
				Number: func(v int32) *int32 { return &v }(10),
				Label:  func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(3),
				Type:   func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(5),
			}, {Name: func(v string) *string { return &v }("weak_dependency"),
				Number: func(v int32) *int32 { return &v }(11),
				Label:  func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(3),
				Type:   func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(5),
			}, {Name: func(v string) *string { return &v }("message_type"),
				Number:   func(v int32) *int32 { return &v }(4),
				Label:    func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(3),
				Type:     func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(11),
				TypeName: func(v string) *string { return &v }(".google.protobuf.DescriptorProto"),
			}, {Name: func(v string) *string { return &v }("enum_type"),
				Number:   func(v int32) *int32 { return &v }(5),
				Label:    func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(3),
				Type:     func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(11),
				TypeName: func(v string) *string { return &v }(".google.protobuf.EnumDescriptorProto"),
			}, {Name: func(v string) *string { return &v }("service"),
				Number:   func(v int32) *int32 { return &v }(6),
				Label:    func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(3),
				Type:     func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(11),
				TypeName: func(v string) *string { return &v }(".google.protobuf.ServiceDescriptorProto"),
			}, {Name: func(v string) *string { return &v }("extension"),
				Number:   func(v int32) *int32 { return &v }(7),
				Label:    func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(3),
				Type:     func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(11),
				TypeName: func(v string) *string { return &v }(".google.protobuf.FieldDescriptorProto"),
			}, {Name: func(v string) *string { return &v }("options"),
				Number:   func(v int32) *int32 { return &v }(8),
				Label:    func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(1),
				Type:     func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(11),
				TypeName: func(v string) *string { return &v }(".google.protobuf.FileOptions"),
			}, {Name: func(v string) *string { return &v }("source_code_info"),
				Number:   func(v int32) *int32 { return &v }(9),
				Label:    func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(1),
				Type:     func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(11),
				TypeName: func(v string) *string { return &v }(".google.protobuf.SourceCodeInfo"),
			}, {Name: func(v string) *string { return &v }("syntax"),
				Number: func(v int32) *int32 { return &v }(12),
				Label:  func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(1),
				Type:   func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(9),
			}},
		}, {Name: func(v string) *string { return &v }("DescriptorProto"),
			Field: []*descriptor.FieldDescriptorProto{{Name: func(v string) *string { return &v }("name"),
				Number: func(v int32) *int32 { return &v }(1),
				Label:  func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(1),
				Type:   func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(9),
			}, {Name: func(v string) *string { return &v }("field"),
				Number:   func(v int32) *int32 { return &v }(2),
				Label:    func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(3),
				Type:     func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(11),
				TypeName: func(v string) *string { return &v }(".google.protobuf.FieldDescriptorProto"),
			}, {Name: func(v string) *string { return &v }("extension"),
				Number:   func(v int32) *int32 { return &v }(6),
				Label:    func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(3),
				Type:     func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(11),
				TypeName: func(v string) *string { return &v }(".google.protobuf.FieldDescriptorProto"),
			}, {Name: func(v string) *string { return &v }("nested_type"),
				Number:   func(v int32) *int32 { return &v }(3),
				Label:    func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(3),
				Type:     func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(11),
				TypeName: func(v string) *string { return &v }(".google.protobuf.DescriptorProto"),
			}, {Name: func(v string) *string { return &v }("enum_type"),
				Number:   func(v int32) *int32 { return &v }(4),
				Label:    func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(3),
				Type:     func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(11),
				TypeName: func(v string) *string { return &v }(".google.protobuf.EnumDescriptorProto"),
			}, {Name: func(v string) *string { return &v }("extension_range"),
				Number:   func(v int32) *int32 { return &v }(5),
				Label:    func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(3),
				Type:     func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(11),
				TypeName: func(v string) *string { return &v }(".google.protobuf.DescriptorProto.ExtensionRange"),
			}, {Name: func(v string) *string { return &v }("oneof_decl"),
				Number:   func(v int32) *int32 { return &v }(8),
				Label:    func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(3),
				Type:     func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(11),
				TypeName: func(v string) *string { return &v }(".google.protobuf.OneofDescriptorProto"),
			}, {Name: func(v string) *string { return &v }("options"),
				Number:   func(v int32) *int32 { return &v }(7),
				Label:    func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(1),
				Type:     func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(11),
				TypeName: func(v string) *string { return &v }(".google.protobuf.MessageOptions"),
			}, {Name: func(v string) *string { return &v }("reserved_range"),
				Number:   func(v int32) *int32 { return &v }(9),
				Label:    func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(3),
				Type:     func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(11),
				TypeName: func(v string) *string { return &v }(".google.protobuf.DescriptorProto.ReservedRange"),
			}, {Name: func(v string) *string { return &v }("reserved_name"),
				Number: func(v int32) *int32 { return &v }(10),
				Label:  func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(3),
				Type:   func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(9),
			}},
			NestedType: []*descriptor.DescriptorProto{{Name: func(v string) *string { return &v }("ExtensionRange"),
				Field: []*descriptor.FieldDescriptorProto{{Name: func(v string) *string { return &v }("start"),
					Number: func(v int32) *int32 { return &v }(1),
					Label:  func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(1),
					Type:   func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(5),
				}, {Name: func(v string) *string { return &v }("end"),
					Number: func(v int32) *int32 { return &v }(2),
					Label:  func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(1),
					Type:   func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(5),
				}},
			}, {Name: func(v string) *string { return &v }("ReservedRange"),
				Field: []*descriptor.FieldDescriptorProto{{Name: func(v string) *string { return &v }("start"),
					Number: func(v int32) *int32 { return &v }(1),
					Label:  func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(1),
					Type:   func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(5),
				}, {Name: func(v string) *string { return &v }("end"),
					Number: func(v int32) *int32 { return &v }(2),
					Label:  func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(1),
					Type:   func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(5),
				}},
			}},
		}, {Name: func(v string) *string { return &v }("FieldDescriptorProto"),
			Field: []*descriptor.FieldDescriptorProto{{Name: func(v string) *string { return &v }("name"),
				Number: func(v int32) *int32 { return &v }(1),
				Label:  func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(1),
				Type:   func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(9),
			}, {Name: func(v string) *string { return &v }("number"),
				Number: func(v int32) *int32 { return &v }(3),
				Label:  func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(1),
				Type:   func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(5),
			}, {Name: func(v string) *string { return &v }("label"),
				Number:   func(v int32) *int32 { return &v }(4),
				Label:    func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(1),
				Type:     func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(14),
				TypeName: func(v string) *string { return &v }(".google.protobuf.FieldDescriptorProto.Label"),
			}, {Name: func(v string) *string { return &v }("type"),
				Number:   func(v int32) *int32 { return &v }(5),
				Label:    func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(1),
				Type:     func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(14),
				TypeName: func(v string) *string { return &v }(".google.protobuf.FieldDescriptorProto.Type"),
			}, {Name: func(v string) *string { return &v }("type_name"),
				Number: func(v int32) *int32 { return &v }(6),
				Label:  func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(1),
				Type:   func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(9),
			}, {Name: func(v string) *string { return &v }("extendee"),
				Number: func(v int32) *int32 { return &v }(2),
				Label:  func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(1),
				Type:   func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(9),
			}, {Name: func(v string) *string { return &v }("default_value"),
				Number: func(v int32) *int32 { return &v }(7),
				Label:  func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(1),
				Type:   func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(9),
			}, {Name: func(v string) *string { return &v }("oneof_index"),
				Number: func(v int32) *int32 { return &v }(9),
				Label:  func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(1),
				Type:   func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(5),
			}, {Name: func(v string) *string { return &v }("json_name"),
				Number: func(v int32) *int32 { return &v }(10),
				Label:  func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(1),
				Type:   func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(9),
			}, {Name: func(v string) *string { return &v }("options"),
				Number:   func(v int32) *int32 { return &v }(8),
				Label:    func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(1),
				Type:     func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(11),
				TypeName: func(v string) *string { return &v }(".google.protobuf.FieldOptions"),
			}},
			EnumType: []*descriptor.EnumDescriptorProto{{Name: func(v string) *string { return &v }("Type"),
				Value: []*descriptor.EnumValueDescriptorProto{{Name: func(v string) *string { return &v }("TYPE_DOUBLE"),
					Number: func(v int32) *int32 { return &v }(1),
				}, {Name: func(v string) *string { return &v }("TYPE_FLOAT"),
					Number: func(v int32) *int32 { return &v }(2),
				}, {Name: func(v string) *string { return &v }("TYPE_INT64"),
					Number: func(v int32) *int32 { return &v }(3),
				}, {Name: func(v string) *string { return &v }("TYPE_UINT64"),
					Number: func(v int32) *int32 { return &v }(4),
				}, {Name: func(v string) *string { return &v }("TYPE_INT32"),
					Number: func(v int32) *int32 { return &v }(5),
				}, {Name: func(v string) *string { return &v }("TYPE_FIXED64"),
					Number: func(v int32) *int32 { return &v }(6),
				}, {Name: func(v string) *string { return &v }("TYPE_FIXED32"),
					Number: func(v int32) *int32 { return &v }(7),
				}, {Name: func(v string) *string { return &v }("TYPE_BOOL"),
					Number: func(v int32) *int32 { return &v }(8),
				}, {Name: func(v string) *string { return &v }("TYPE_STRING"),
					Number: func(v int32) *int32 { return &v }(9),
				}, {Name: func(v string) *string { return &v }("TYPE_GROUP"),
					Number: func(v int32) *int32 { return &v }(10),
				}, {Name: func(v string) *string { return &v }("TYPE_MESSAGE"),
					Number: func(v int32) *int32 { return &v }(11),
				}, {Name: func(v string) *string { return &v }("TYPE_BYTES"),
					Number: func(v int32) *int32 { return &v }(12),
				}, {Name: func(v string) *string { return &v }("TYPE_UINT32"),
					Number: func(v int32) *int32 { return &v }(13),
				}, {Name: func(v string) *string { return &v }("TYPE_ENUM"),
					Number: func(v int32) *int32 { return &v }(14),
				}, {Name: func(v string) *string { return &v }("TYPE_SFIXED32"),
					Number: func(v int32) *int32 { return &v }(15),
				}, {Name: func(v string) *string { return &v }("TYPE_SFIXED64"),
					Number: func(v int32) *int32 { return &v }(16),
				}, {Name: func(v string) *string { return &v }("TYPE_SINT32"),
					Number: func(v int32) *int32 { return &v }(17),
				}, {Name: func(v string) *string { return &v }("TYPE_SINT64"),
					Number: func(v int32) *int32 { return &v }(18),
				}},
			}, {Name: func(v string) *string { return &v }("Label"),
				Value: []*descriptor.EnumValueDescriptorProto{{Name: func(v string) *string { return &v }("LABEL_OPTIONAL"),
					Number: func(v int32) *int32 { return &v }(1),
				}, {Name: func(v string) *string { return &v }("LABEL_REQUIRED"),
					Number: func(v int32) *int32 { return &v }(2),
				}, {Name: func(v string) *string { return &v }("LABEL_REPEATED"),
					Number: func(v int32) *int32 { return &v }(3),
				}},
			}},
		}, {Name: func(v string) *string { return &v }("OneofDescriptorProto"),
			Field: []*descriptor.FieldDescriptorProto{{Name: func(v string) *string { return &v }("name"),
				Number: func(v int32) *int32 { return &v }(1),
				Label:  func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(1),
				Type:   func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(9),
			}},
		}, {Name: func(v string) *string { return &v }("EnumDescriptorProto"),
			Field: []*descriptor.FieldDescriptorProto{{Name: func(v string) *string { return &v }("name"),
				Number: func(v int32) *int32 { return &v }(1),
				Label:  func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(1),
				Type:   func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(9),
			}, {Name: func(v string) *string { return &v }("value"),
				Number:   func(v int32) *int32 { return &v }(2),
				Label:    func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(3),
				Type:     func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(11),
				TypeName: func(v string) *string { return &v }(".google.protobuf.EnumValueDescriptorProto"),
			}, {Name: func(v string) *string { return &v }("options"),
				Number:   func(v int32) *int32 { return &v }(3),
				Label:    func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(1),
				Type:     func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(11),
				TypeName: func(v string) *string { return &v }(".google.protobuf.EnumOptions"),
			}},
		}, {Name: func(v string) *string { return &v }("EnumValueDescriptorProto"),
			Field: []*descriptor.FieldDescriptorProto{{Name: func(v string) *string { return &v }("name"),
				Number: func(v int32) *int32 { return &v }(1),
				Label:  func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(1),
				Type:   func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(9),
			}, {Name: func(v string) *string { return &v }("number"),
				Number: func(v int32) *int32 { return &v }(2),
				Label:  func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(1),
				Type:   func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(5),
			}, {Name: func(v string) *string { return &v }("options"),
				Number:   func(v int32) *int32 { return &v }(3),
				Label:    func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(1),
				Type:     func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(11),
				TypeName: func(v string) *string { return &v }(".google.protobuf.EnumValueOptions"),
			}},
		}, {Name: func(v string) *string { return &v }("ServiceDescriptorProto"),
			Field: []*descriptor.FieldDescriptorProto{{Name: func(v string) *string { return &v }("name"),
				Number: func(v int32) *int32 { return &v }(1),
				Label:  func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(1),
				Type:   func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(9),
			}, {Name: func(v string) *string { return &v }("method"),
				Number:   func(v int32) *int32 { return &v }(2),
				Label:    func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(3),
				Type:     func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(11),
				TypeName: func(v string) *string { return &v }(".google.protobuf.MethodDescriptorProto"),
			}, {Name: func(v string) *string { return &v }("options"),
				Number:   func(v int32) *int32 { return &v }(3),
				Label:    func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(1),
				Type:     func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(11),
				TypeName: func(v string) *string { return &v }(".google.protobuf.ServiceOptions"),
			}},
		}, {Name: func(v string) *string { return &v }("MethodDescriptorProto"),
			Field: []*descriptor.FieldDescriptorProto{{Name: func(v string) *string { return &v }("name"),
				Number: func(v int32) *int32 { return &v }(1),
				Label:  func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(1),
				Type:   func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(9),
			}, {Name: func(v string) *string { return &v }("input_type"),
				Number: func(v int32) *int32 { return &v }(2),
				Label:  func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(1),
				Type:   func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(9),
			}, {Name: func(v string) *string { return &v }("output_type"),
				Number: func(v int32) *int32 { return &v }(3),
				Label:  func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(1),
				Type:   func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(9),
			}, {Name: func(v string) *string { return &v }("options"),
				Number:   func(v int32) *int32 { return &v }(4),
				Label:    func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(1),
				Type:     func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(11),
				TypeName: func(v string) *string { return &v }(".google.protobuf.MethodOptions"),
			}, {Name: func(v string) *string { return &v }("client_streaming"),
				Number:       func(v int32) *int32 { return &v }(5),
				Label:        func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(1),
				Type:         func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(8),
				DefaultValue: func(v string) *string { return &v }("false"),
			}, {Name: func(v string) *string { return &v }("server_streaming"),
				Number:       func(v int32) *int32 { return &v }(6),
				Label:        func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(1),
				Type:         func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(8),
				DefaultValue: func(v string) *string { return &v }("false"),
			}},
		}, {Name: func(v string) *string { return &v }("FileOptions"),
			Field: []*descriptor.FieldDescriptorProto{{Name: func(v string) *string { return &v }("java_package"),
				Number: func(v int32) *int32 { return &v }(1),
				Label:  func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(1),
				Type:   func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(9),
			}, {Name: func(v string) *string { return &v }("java_outer_classname"),
				Number: func(v int32) *int32 { return &v }(8),
				Label:  func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(1),
				Type:   func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(9),
			}, {Name: func(v string) *string { return &v }("java_multiple_files"),
				Number:       func(v int32) *int32 { return &v }(10),
				Label:        func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(1),
				Type:         func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(8),
				DefaultValue: func(v string) *string { return &v }("false"),
			}, {Name: func(v string) *string { return &v }("java_generate_equals_and_hash"),
				Number:       func(v int32) *int32 { return &v }(20),
				Label:        func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(1),
				Type:         func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(8),
				DefaultValue: func(v string) *string { return &v }("false"),
			}, {Name: func(v string) *string { return &v }("java_string_check_utf8"),
				Number:       func(v int32) *int32 { return &v }(27),
				Label:        func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(1),
				Type:         func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(8),
				DefaultValue: func(v string) *string { return &v }("false"),
			}, {Name: func(v string) *string { return &v }("optimize_for"),
				Number:       func(v int32) *int32 { return &v }(9),
				Label:        func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(1),
				Type:         func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(14),
				TypeName:     func(v string) *string { return &v }(".google.protobuf.FileOptions.OptimizeMode"),
				DefaultValue: func(v string) *string { return &v }("SPEED"),
			}, {Name: func(v string) *string { return &v }("go_package"),
				Number: func(v int32) *int32 { return &v }(11),
				Label:  func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(1),
				Type:   func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(9),
			}, {Name: func(v string) *string { return &v }("cc_generic_services"),
				Number:       func(v int32) *int32 { return &v }(16),
				Label:        func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(1),
				Type:         func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(8),
				DefaultValue: func(v string) *string { return &v }("false"),
			}, {Name: func(v string) *string { return &v }("java_generic_services"),
				Number:       func(v int32) *int32 { return &v }(17),
				Label:        func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(1),
				Type:         func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(8),
				DefaultValue: func(v string) *string { return &v }("false"),
			}, {Name: func(v string) *string { return &v }("py_generic_services"),
				Number:       func(v int32) *int32 { return &v }(18),
				Label:        func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(1),
				Type:         func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(8),
				DefaultValue: func(v string) *string { return &v }("false"),
			}, {Name: func(v string) *string { return &v }("deprecated"),
				Number:       func(v int32) *int32 { return &v }(23),
				Label:        func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(1),
				Type:         func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(8),
				DefaultValue: func(v string) *string { return &v }("false"),
			}, {Name: func(v string) *string { return &v }("cc_enable_arenas"),
				Number:       func(v int32) *int32 { return &v }(31),
				Label:        func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(1),
				Type:         func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(8),
				DefaultValue: func(v string) *string { return &v }("false"),
			}, {Name: func(v string) *string { return &v }("objc_class_prefix"),
				Number: func(v int32) *int32 { return &v }(36),
				Label:  func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(1),
				Type:   func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(9),
			}, {Name: func(v string) *string { return &v }("csharp_namespace"),
				Number: func(v int32) *int32 { return &v }(37),
				Label:  func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(1),
				Type:   func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(9),
			}, {Name: func(v string) *string { return &v }("javanano_use_deprecated_package"),
				Number: func(v int32) *int32 { return &v }(38),
				Label:  func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(1),
				Type:   func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(8),
			}, {Name: func(v string) *string { return &v }("uninterpreted_option"),
				Number:   func(v int32) *int32 { return &v }(999),
				Label:    func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(3),
				Type:     func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(11),
				TypeName: func(v string) *string { return &v }(".google.protobuf.UninterpretedOption"),
			}},
			EnumType: []*descriptor.EnumDescriptorProto{{Name: func(v string) *string { return &v }("OptimizeMode"),
				Value: []*descriptor.EnumValueDescriptorProto{{Name: func(v string) *string { return &v }("SPEED"),
					Number: func(v int32) *int32 { return &v }(1),
				}, {Name: func(v string) *string { return &v }("CODE_SIZE"),
					Number: func(v int32) *int32 { return &v }(2),
				}, {Name: func(v string) *string { return &v }("LITE_RUNTIME"),
					Number: func(v int32) *int32 { return &v }(3),
				}},
			}},
			ExtensionRange: []*descriptor.DescriptorProto_ExtensionRange{{Start: func(v int32) *int32 { return &v }(1000),
				End: func(v int32) *int32 { return &v }(536870912),
			}},
		}, {Name: func(v string) *string { return &v }("MessageOptions"),
			Field: []*descriptor.FieldDescriptorProto{{Name: func(v string) *string { return &v }("message_set_wire_format"),
				Number:       func(v int32) *int32 { return &v }(1),
				Label:        func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(1),
				Type:         func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(8),
				DefaultValue: func(v string) *string { return &v }("false"),
			}, {Name: func(v string) *string { return &v }("no_standard_descriptor_accessor"),
				Number:       func(v int32) *int32 { return &v }(2),
				Label:        func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(1),
				Type:         func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(8),
				DefaultValue: func(v string) *string { return &v }("false"),
			}, {Name: func(v string) *string { return &v }("deprecated"),
				Number:       func(v int32) *int32 { return &v }(3),
				Label:        func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(1),
				Type:         func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(8),
				DefaultValue: func(v string) *string { return &v }("false"),
			}, {Name: func(v string) *string { return &v }("map_entry"),
				Number: func(v int32) *int32 { return &v }(7),
				Label:  func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(1),
				Type:   func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(8),
			}, {Name: func(v string) *string { return &v }("uninterpreted_option"),
				Number:   func(v int32) *int32 { return &v }(999),
				Label:    func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(3),
				Type:     func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(11),
				TypeName: func(v string) *string { return &v }(".google.protobuf.UninterpretedOption"),
			}},
			ExtensionRange: []*descriptor.DescriptorProto_ExtensionRange{{Start: func(v int32) *int32 { return &v }(1000),
				End: func(v int32) *int32 { return &v }(536870912),
			}},
		}, {Name: func(v string) *string { return &v }("FieldOptions"),
			Field: []*descriptor.FieldDescriptorProto{{Name: func(v string) *string { return &v }("ctype"),
				Number:       func(v int32) *int32 { return &v }(1),
				Label:        func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(1),
				Type:         func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(14),
				TypeName:     func(v string) *string { return &v }(".google.protobuf.FieldOptions.CType"),
				DefaultValue: func(v string) *string { return &v }("STRING"),
			}, {Name: func(v string) *string { return &v }("packed"),
				Number: func(v int32) *int32 { return &v }(2),
				Label:  func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(1),
				Type:   func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(8),
			}, {Name: func(v string) *string { return &v }("jstype"),
				Number:       func(v int32) *int32 { return &v }(6),
				Label:        func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(1),
				Type:         func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(14),
				TypeName:     func(v string) *string { return &v }(".google.protobuf.FieldOptions.JSType"),
				DefaultValue: func(v string) *string { return &v }("JS_NORMAL"),
			}, {Name: func(v string) *string { return &v }("lazy"),
				Number:       func(v int32) *int32 { return &v }(5),
				Label:        func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(1),
				Type:         func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(8),
				DefaultValue: func(v string) *string { return &v }("false"),
			}, {Name: func(v string) *string { return &v }("deprecated"),
				Number:       func(v int32) *int32 { return &v }(3),
				Label:        func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(1),
				Type:         func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(8),
				DefaultValue: func(v string) *string { return &v }("false"),
			}, {Name: func(v string) *string { return &v }("weak"),
				Number:       func(v int32) *int32 { return &v }(10),
				Label:        func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(1),
				Type:         func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(8),
				DefaultValue: func(v string) *string { return &v }("false"),
			}, {Name: func(v string) *string { return &v }("uninterpreted_option"),
				Number:   func(v int32) *int32 { return &v }(999),
				Label:    func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(3),
				Type:     func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(11),
				TypeName: func(v string) *string { return &v }(".google.protobuf.UninterpretedOption"),
			}},
			EnumType: []*descriptor.EnumDescriptorProto{{Name: func(v string) *string { return &v }("CType"),
				Value: []*descriptor.EnumValueDescriptorProto{{Name: func(v string) *string { return &v }("STRING"),
					Number: func(v int32) *int32 { return &v }(0),
				}, {Name: func(v string) *string { return &v }("CORD"),
					Number: func(v int32) *int32 { return &v }(1),
				}, {Name: func(v string) *string { return &v }("STRING_PIECE"),
					Number: func(v int32) *int32 { return &v }(2),
				}},
			}, {Name: func(v string) *string { return &v }("JSType"),
				Value: []*descriptor.EnumValueDescriptorProto{{Name: func(v string) *string { return &v }("JS_NORMAL"),
					Number: func(v int32) *int32 { return &v }(0),
				}, {Name: func(v string) *string { return &v }("JS_STRING"),
					Number: func(v int32) *int32 { return &v }(1),
				}, {Name: func(v string) *string { return &v }("JS_NUMBER"),
					Number: func(v int32) *int32 { return &v }(2),
				}},
			}},
			ExtensionRange: []*descriptor.DescriptorProto_ExtensionRange{{Start: func(v int32) *int32 { return &v }(1000),
				End: func(v int32) *int32 { return &v }(536870912),
			}},
		}, {Name: func(v string) *string { return &v }("EnumOptions"),
			Field: []*descriptor.FieldDescriptorProto{{Name: func(v string) *string { return &v }("allow_alias"),
				Number: func(v int32) *int32 { return &v }(2),
				Label:  func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(1),
				Type:   func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(8),
			}, {Name: func(v string) *string { return &v }("deprecated"),
				Number:       func(v int32) *int32 { return &v }(3),
				Label:        func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(1),
				Type:         func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(8),
				DefaultValue: func(v string) *string { return &v }("false"),
			}, {Name: func(v string) *string { return &v }("uninterpreted_option"),
				Number:   func(v int32) *int32 { return &v }(999),
				Label:    func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(3),
				Type:     func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(11),
				TypeName: func(v string) *string { return &v }(".google.protobuf.UninterpretedOption"),
			}},
			ExtensionRange: []*descriptor.DescriptorProto_ExtensionRange{{Start: func(v int32) *int32 { return &v }(1000),
				End: func(v int32) *int32 { return &v }(536870912),
			}},
		}, {Name: func(v string) *string { return &v }("EnumValueOptions"),
			Field: []*descriptor.FieldDescriptorProto{{Name: func(v string) *string { return &v }("deprecated"),
				Number:       func(v int32) *int32 { return &v }(1),
				Label:        func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(1),
				Type:         func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(8),
				DefaultValue: func(v string) *string { return &v }("false"),
			}, {Name: func(v string) *string { return &v }("uninterpreted_option"),
				Number:   func(v int32) *int32 { return &v }(999),
				Label:    func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(3),
				Type:     func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(11),
				TypeName: func(v string) *string { return &v }(".google.protobuf.UninterpretedOption"),
			}},
			ExtensionRange: []*descriptor.DescriptorProto_ExtensionRange{{Start: func(v int32) *int32 { return &v }(1000),
				End: func(v int32) *int32 { return &v }(536870912),
			}},
		}, {Name: func(v string) *string { return &v }("ServiceOptions"),
			Field: []*descriptor.FieldDescriptorProto{{Name: func(v string) *string { return &v }("deprecated"),
				Number:       func(v int32) *int32 { return &v }(33),
				Label:        func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(1),
				Type:         func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(8),
				DefaultValue: func(v string) *string { return &v }("false"),
			}, {Name: func(v string) *string { return &v }("uninterpreted_option"),
				Number:   func(v int32) *int32 { return &v }(999),
				Label:    func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(3),
				Type:     func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(11),
				TypeName: func(v string) *string { return &v }(".google.protobuf.UninterpretedOption"),
			}},
			ExtensionRange: []*descriptor.DescriptorProto_ExtensionRange{{Start: func(v int32) *int32 { return &v }(1000),
				End: func(v int32) *int32 { return &v }(536870912),
			}},
		}, {Name: func(v string) *string { return &v }("MethodOptions"),
			Field: []*descriptor.FieldDescriptorProto{{Name: func(v string) *string { return &v }("deprecated"),
				Number:       func(v int32) *int32 { return &v }(33),
				Label:        func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(1),
				Type:         func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(8),
				DefaultValue: func(v string) *string { return &v }("false"),
			}, {Name: func(v string) *string { return &v }("uninterpreted_option"),
				Number:   func(v int32) *int32 { return &v }(999),
				Label:    func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(3),
				Type:     func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(11),
				TypeName: func(v string) *string { return &v }(".google.protobuf.UninterpretedOption"),
			}},
			ExtensionRange: []*descriptor.DescriptorProto_ExtensionRange{{Start: func(v int32) *int32 { return &v }(1000),
				End: func(v int32) *int32 { return &v }(536870912),
			}},
		}, {Name: func(v string) *string { return &v }("UninterpretedOption"),
			Field: []*descriptor.FieldDescriptorProto{{Name: func(v string) *string { return &v }("name"),
				Number:   func(v int32) *int32 { return &v }(2),
				Label:    func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(3),
				Type:     func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(11),
				TypeName: func(v string) *string { return &v }(".google.protobuf.UninterpretedOption.NamePart"),
			}, {Name: func(v string) *string { return &v }("identifier_value"),
				Number: func(v int32) *int32 { return &v }(3),
				Label:  func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(1),
				Type:   func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(9),
			}, {Name: func(v string) *string { return &v }("positive_int_value"),
				Number: func(v int32) *int32 { return &v }(4),
				Label:  func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(1),
				Type:   func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(4),
			}, {Name: func(v string) *string { return &v }("negative_int_value"),
				Number: func(v int32) *int32 { return &v }(5),
				Label:  func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(1),
				Type:   func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(3),
			}, {Name: func(v string) *string { return &v }("double_value"),
				Number: func(v int32) *int32 { return &v }(6),
				Label:  func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(1),
				Type:   func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(1),
			}, {Name: func(v string) *string { return &v }("string_value"),
				Number: func(v int32) *int32 { return &v }(7),
				Label:  func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(1),
				Type:   func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(12),
			}, {Name: func(v string) *string { return &v }("aggregate_value"),
				Number: func(v int32) *int32 { return &v }(8),
				Label:  func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(1),
				Type:   func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(9),
			}},
			NestedType: []*descriptor.DescriptorProto{{Name: func(v string) *string { return &v }("NamePart"),
				Field: []*descriptor.FieldDescriptorProto{{Name: func(v string) *string { return &v }("name_part"),
					Number: func(v int32) *int32 { return &v }(1),
					Label:  func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(2),
					Type:   func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(9),
				}, {Name: func(v string) *string { return &v }("is_extension"),
					Number: func(v int32) *int32 { return &v }(2),
					Label:  func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(2),
					Type:   func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(8),
				}},
			}},
		}, {Name: func(v string) *string { return &v }("SourceCodeInfo"),
			Field: []*descriptor.FieldDescriptorProto{{Name: func(v string) *string { return &v }("location"),
				Number:   func(v int32) *int32 { return &v }(1),
				Label:    func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(3),
				Type:     func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(11),
				TypeName: func(v string) *string { return &v }(".google.protobuf.SourceCodeInfo.Location"),
			}},
			NestedType: []*descriptor.DescriptorProto{{Name: func(v string) *string { return &v }("Location"),
				Field: []*descriptor.FieldDescriptorProto{{Name: func(v string) *string { return &v }("path"),
					Number: func(v int32) *int32 { return &v }(1),
					Label:  func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(3),
					Type:   func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(5),
					Options: &descriptor.FieldOptions{Packed: func(v bool) *bool { return &v }(true),
						XXX_extensions: map[int32]proto.Extension{},
					},
				}, {Name: func(v string) *string { return &v }("span"),
					Number: func(v int32) *int32 { return &v }(2),
					Label:  func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(3),
					Type:   func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(5),
					Options: &descriptor.FieldOptions{Packed: func(v bool) *bool { return &v }(true),
						XXX_extensions: map[int32]proto.Extension{},
					},
				}, {Name: func(v string) *string { return &v }("leading_comments"),
					Number: func(v int32) *int32 { return &v }(3),
					Label:  func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(1),
					Type:   func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(9),
				}, {Name: func(v string) *string { return &v }("trailing_comments"),
					Number: func(v int32) *int32 { return &v }(4),
					Label:  func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(1),
					Type:   func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(9),
				}, {Name: func(v string) *string { return &v }("leading_detached_comments"),
					Number: func(v int32) *int32 { return &v }(6),
					Label:  func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(3),
					Type:   func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(9),
				}},
			}},
		}},
		Options: &descriptor.FileOptions{JavaPackage: func(v string) *string { return &v }("com.google.protobuf"),
			JavaOuterClassname: func(v string) *string { return &v }("DescriptorProtos"),
			OptimizeFor:        func(v descriptor.FileOptions_OptimizeMode) *descriptor.FileOptions_OptimizeMode { return &v }(1),
			GoPackage:          func(v string) *string { return &v }("descriptor"),
			ObjcClassPrefix:    func(v string) *string { return &v }("GPB"),
			CsharpNamespace:    func(v string) *string { return &v }("Google.Protobuf.Reflection"),
			XXX_extensions:     map[int32]proto.Extension{},
		},
	}, {Name: func(v string) *string { return &v }("github.com/gogo/protobuf/gogoproto/gogo.proto"),
		Package:    func(v string) *string { return &v }("gogoproto"),
		Dependency: []string{"google/protobuf/descriptor.proto"},
		Extension: []*descriptor.FieldDescriptorProto{{Name: func(v string) *string { return &v }("goproto_enum_prefix"),
			Number:   func(v int32) *int32 { return &v }(62001),
			Label:    func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(1),
			Type:     func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(8),
			Extendee: func(v string) *string { return &v }(".google.protobuf.EnumOptions"),
		}, {Name: func(v string) *string { return &v }("goproto_enum_stringer"),
			Number:   func(v int32) *int32 { return &v }(62021),
			Label:    func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(1),
			Type:     func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(8),
			Extendee: func(v string) *string { return &v }(".google.protobuf.EnumOptions"),
		}, {Name: func(v string) *string { return &v }("enum_stringer"),
			Number:   func(v int32) *int32 { return &v }(62022),
			Label:    func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(1),
			Type:     func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(8),
			Extendee: func(v string) *string { return &v }(".google.protobuf.EnumOptions"),
		}, {Name: func(v string) *string { return &v }("goproto_getters_all"),
			Number:   func(v int32) *int32 { return &v }(63001),
			Label:    func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(1),
			Type:     func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(8),
			Extendee: func(v string) *string { return &v }(".google.protobuf.FileOptions"),
		}, {Name: func(v string) *string { return &v }("goproto_enum_prefix_all"),
			Number:   func(v int32) *int32 { return &v }(63002),
			Label:    func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(1),
			Type:     func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(8),
			Extendee: func(v string) *string { return &v }(".google.protobuf.FileOptions"),
		}, {Name: func(v string) *string { return &v }("goproto_stringer_all"),
			Number:   func(v int32) *int32 { return &v }(63003),
			Label:    func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(1),
			Type:     func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(8),
			Extendee: func(v string) *string { return &v }(".google.protobuf.FileOptions"),
		}, {Name: func(v string) *string { return &v }("verbose_equal_all"),
			Number:   func(v int32) *int32 { return &v }(63004),
			Label:    func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(1),
			Type:     func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(8),
			Extendee: func(v string) *string { return &v }(".google.protobuf.FileOptions"),
		}, {Name: func(v string) *string { return &v }("face_all"),
			Number:   func(v int32) *int32 { return &v }(63005),
			Label:    func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(1),
			Type:     func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(8),
			Extendee: func(v string) *string { return &v }(".google.protobuf.FileOptions"),
		}, {Name: func(v string) *string { return &v }("gostring_all"),
			Number:   func(v int32) *int32 { return &v }(63006),
			Label:    func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(1),
			Type:     func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(8),
			Extendee: func(v string) *string { return &v }(".google.protobuf.FileOptions"),
		}, {Name: func(v string) *string { return &v }("populate_all"),
			Number:   func(v int32) *int32 { return &v }(63007),
			Label:    func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(1),
			Type:     func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(8),
			Extendee: func(v string) *string { return &v }(".google.protobuf.FileOptions"),
		}, {Name: func(v string) *string { return &v }("stringer_all"),
			Number:   func(v int32) *int32 { return &v }(63008),
			Label:    func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(1),
			Type:     func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(8),
			Extendee: func(v string) *string { return &v }(".google.protobuf.FileOptions"),
		}, {Name: func(v string) *string { return &v }("onlyone_all"),
			Number:   func(v int32) *int32 { return &v }(63009),
			Label:    func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(1),
			Type:     func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(8),
			Extendee: func(v string) *string { return &v }(".google.protobuf.FileOptions"),
		}, {Name: func(v string) *string { return &v }("equal_all"),
			Number:   func(v int32) *int32 { return &v }(63013),
			Label:    func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(1),
			Type:     func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(8),
			Extendee: func(v string) *string { return &v }(".google.protobuf.FileOptions"),
		}, {Name: func(v string) *string { return &v }("description_all"),
			Number:   func(v int32) *int32 { return &v }(63014),
			Label:    func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(1),
			Type:     func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(8),
			Extendee: func(v string) *string { return &v }(".google.protobuf.FileOptions"),
		}, {Name: func(v string) *string { return &v }("testgen_all"),
			Number:   func(v int32) *int32 { return &v }(63015),
			Label:    func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(1),
			Type:     func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(8),
			Extendee: func(v string) *string { return &v }(".google.protobuf.FileOptions"),
		}, {Name: func(v string) *string { return &v }("benchgen_all"),
			Number:   func(v int32) *int32 { return &v }(63016),
			Label:    func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(1),
			Type:     func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(8),
			Extendee: func(v string) *string { return &v }(".google.protobuf.FileOptions"),
		}, {Name: func(v string) *string { return &v }("marshaler_all"),
			Number:   func(v int32) *int32 { return &v }(63017),
			Label:    func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(1),
			Type:     func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(8),
			Extendee: func(v string) *string { return &v }(".google.protobuf.FileOptions"),
		}, {Name: func(v string) *string { return &v }("unmarshaler_all"),
			Number:   func(v int32) *int32 { return &v }(63018),
			Label:    func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(1),
			Type:     func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(8),
			Extendee: func(v string) *string { return &v }(".google.protobuf.FileOptions"),
		}, {Name: func(v string) *string { return &v }("sizer_all"),
			Number:   func(v int32) *int32 { return &v }(63020),
			Label:    func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(1),
			Type:     func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(8),
			Extendee: func(v string) *string { return &v }(".google.protobuf.FileOptions"),
		}, {Name: func(v string) *string { return &v }("goproto_enum_stringer_all"),
			Number:   func(v int32) *int32 { return &v }(63021),
			Label:    func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(1),
			Type:     func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(8),
			Extendee: func(v string) *string { return &v }(".google.protobuf.FileOptions"),
		}, {Name: func(v string) *string { return &v }("enum_stringer_all"),
			Number:   func(v int32) *int32 { return &v }(63022),
			Label:    func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(1),
			Type:     func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(8),
			Extendee: func(v string) *string { return &v }(".google.protobuf.FileOptions"),
		}, {Name: func(v string) *string { return &v }("unsafe_marshaler_all"),
			Number:   func(v int32) *int32 { return &v }(63023),
			Label:    func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(1),
			Type:     func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(8),
			Extendee: func(v string) *string { return &v }(".google.protobuf.FileOptions"),
		}, {Name: func(v string) *string { return &v }("unsafe_unmarshaler_all"),
			Number:   func(v int32) *int32 { return &v }(63024),
			Label:    func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(1),
			Type:     func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(8),
			Extendee: func(v string) *string { return &v }(".google.protobuf.FileOptions"),
		}, {Name: func(v string) *string { return &v }("goproto_extensions_map_all"),
			Number:   func(v int32) *int32 { return &v }(63025),
			Label:    func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(1),
			Type:     func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(8),
			Extendee: func(v string) *string { return &v }(".google.protobuf.FileOptions"),
		}, {Name: func(v string) *string { return &v }("goproto_unrecognized_all"),
			Number:   func(v int32) *int32 { return &v }(63026),
			Label:    func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(1),
			Type:     func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(8),
			Extendee: func(v string) *string { return &v }(".google.protobuf.FileOptions"),
		}, {Name: func(v string) *string { return &v }("gogoproto_import"),
			Number:   func(v int32) *int32 { return &v }(63027),
			Label:    func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(1),
			Type:     func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(8),
			Extendee: func(v string) *string { return &v }(".google.protobuf.FileOptions"),
		}, {Name: func(v string) *string { return &v }("goproto_getters"),
			Number:   func(v int32) *int32 { return &v }(64001),
			Label:    func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(1),
			Type:     func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(8),
			Extendee: func(v string) *string { return &v }(".google.protobuf.MessageOptions"),
		}, {Name: func(v string) *string { return &v }("goproto_stringer"),
			Number:   func(v int32) *int32 { return &v }(64003),
			Label:    func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(1),
			Type:     func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(8),
			Extendee: func(v string) *string { return &v }(".google.protobuf.MessageOptions"),
		}, {Name: func(v string) *string { return &v }("verbose_equal"),
			Number:   func(v int32) *int32 { return &v }(64004),
			Label:    func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(1),
			Type:     func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(8),
			Extendee: func(v string) *string { return &v }(".google.protobuf.MessageOptions"),
		}, {Name: func(v string) *string { return &v }("face"),
			Number:   func(v int32) *int32 { return &v }(64005),
			Label:    func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(1),
			Type:     func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(8),
			Extendee: func(v string) *string { return &v }(".google.protobuf.MessageOptions"),
		}, {Name: func(v string) *string { return &v }("gostring"),
			Number:   func(v int32) *int32 { return &v }(64006),
			Label:    func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(1),
			Type:     func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(8),
			Extendee: func(v string) *string { return &v }(".google.protobuf.MessageOptions"),
		}, {Name: func(v string) *string { return &v }("populate"),
			Number:   func(v int32) *int32 { return &v }(64007),
			Label:    func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(1),
			Type:     func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(8),
			Extendee: func(v string) *string { return &v }(".google.protobuf.MessageOptions"),
		}, {Name: func(v string) *string { return &v }("stringer"),
			Number:   func(v int32) *int32 { return &v }(67008),
			Label:    func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(1),
			Type:     func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(8),
			Extendee: func(v string) *string { return &v }(".google.protobuf.MessageOptions"),
		}, {Name: func(v string) *string { return &v }("onlyone"),
			Number:   func(v int32) *int32 { return &v }(64009),
			Label:    func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(1),
			Type:     func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(8),
			Extendee: func(v string) *string { return &v }(".google.protobuf.MessageOptions"),
		}, {Name: func(v string) *string { return &v }("equal"),
			Number:   func(v int32) *int32 { return &v }(64013),
			Label:    func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(1),
			Type:     func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(8),
			Extendee: func(v string) *string { return &v }(".google.protobuf.MessageOptions"),
		}, {Name: func(v string) *string { return &v }("description"),
			Number:   func(v int32) *int32 { return &v }(64014),
			Label:    func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(1),
			Type:     func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(8),
			Extendee: func(v string) *string { return &v }(".google.protobuf.MessageOptions"),
		}, {Name: func(v string) *string { return &v }("testgen"),
			Number:   func(v int32) *int32 { return &v }(64015),
			Label:    func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(1),
			Type:     func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(8),
			Extendee: func(v string) *string { return &v }(".google.protobuf.MessageOptions"),
		}, {Name: func(v string) *string { return &v }("benchgen"),
			Number:   func(v int32) *int32 { return &v }(64016),
			Label:    func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(1),
			Type:     func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(8),
			Extendee: func(v string) *string { return &v }(".google.protobuf.MessageOptions"),
		}, {Name: func(v string) *string { return &v }("marshaler"),
			Number:   func(v int32) *int32 { return &v }(64017),
			Label:    func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(1),
			Type:     func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(8),
			Extendee: func(v string) *string { return &v }(".google.protobuf.MessageOptions"),
		}, {Name: func(v string) *string { return &v }("unmarshaler"),
			Number:   func(v int32) *int32 { return &v }(64018),
			Label:    func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(1),
			Type:     func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(8),
			Extendee: func(v string) *string { return &v }(".google.protobuf.MessageOptions"),
		}, {Name: func(v string) *string { return &v }("sizer"),
			Number:   func(v int32) *int32 { return &v }(64020),
			Label:    func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(1),
			Type:     func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(8),
			Extendee: func(v string) *string { return &v }(".google.protobuf.MessageOptions"),
		}, {Name: func(v string) *string { return &v }("unsafe_marshaler"),
			Number:   func(v int32) *int32 { return &v }(64023),
			Label:    func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(1),
			Type:     func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(8),
			Extendee: func(v string) *string { return &v }(".google.protobuf.MessageOptions"),
		}, {Name: func(v string) *string { return &v }("unsafe_unmarshaler"),
			Number:   func(v int32) *int32 { return &v }(64024),
			Label:    func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(1),
			Type:     func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(8),
			Extendee: func(v string) *string { return &v }(".google.protobuf.MessageOptions"),
		}, {Name: func(v string) *string { return &v }("goproto_extensions_map"),
			Number:   func(v int32) *int32 { return &v }(64025),
			Label:    func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(1),
			Type:     func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(8),
			Extendee: func(v string) *string { return &v }(".google.protobuf.MessageOptions"),
		}, {Name: func(v string) *string { return &v }("goproto_unrecognized"),
			Number:   func(v int32) *int32 { return &v }(64026),
			Label:    func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(1),
			Type:     func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(8),
			Extendee: func(v string) *string { return &v }(".google.protobuf.MessageOptions"),
		}, {Name: func(v string) *string { return &v }("nullable"),
			Number:   func(v int32) *int32 { return &v }(65001),
			Label:    func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(1),
			Type:     func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(8),
			Extendee: func(v string) *string { return &v }(".google.protobuf.FieldOptions"),
		}, {Name: func(v string) *string { return &v }("embed"),
			Number:   func(v int32) *int32 { return &v }(65002),
			Label:    func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(1),
			Type:     func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(8),
			Extendee: func(v string) *string { return &v }(".google.protobuf.FieldOptions"),
		}, {Name: func(v string) *string { return &v }("customtype"),
			Number:   func(v int32) *int32 { return &v }(65003),
			Label:    func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(1),
			Type:     func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(9),
			Extendee: func(v string) *string { return &v }(".google.protobuf.FieldOptions"),
		}, {Name: func(v string) *string { return &v }("customname"),
			Number:   func(v int32) *int32 { return &v }(65004),
			Label:    func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(1),
			Type:     func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(9),
			Extendee: func(v string) *string { return &v }(".google.protobuf.FieldOptions"),
		}, {Name: func(v string) *string { return &v }("jsontag"),
			Number:   func(v int32) *int32 { return &v }(65005),
			Label:    func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(1),
			Type:     func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(9),
			Extendee: func(v string) *string { return &v }(".google.protobuf.FieldOptions"),
		}, {Name: func(v string) *string { return &v }("moretags"),
			Number:   func(v int32) *int32 { return &v }(65006),
			Label:    func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(1),
			Type:     func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(9),
			Extendee: func(v string) *string { return &v }(".google.protobuf.FieldOptions"),
		}, {Name: func(v string) *string { return &v }("casttype"),
			Number:   func(v int32) *int32 { return &v }(65007),
			Label:    func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(1),
			Type:     func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(9),
			Extendee: func(v string) *string { return &v }(".google.protobuf.FieldOptions"),
		}},
		Options: &descriptor.FileOptions{JavaPackage: func(v string) *string { return &v }("com.google.protobuf"),
			JavaOuterClassname: func(v string) *string { return &v }("GoGoProtos"),
			XXX_extensions:     map[int32]proto.Extension{},
		},
	}, {Name: func(v string) *string { return &v }("taxonomy.proto"),
		Package:    func(v string) *string { return &v }("tests"),
		Dependency: []string{"github.com/gogo/protobuf/gogoproto/gogo.proto"},
		MessageType: []*descriptor.DescriptorProto{{Name: func(v string) *string { return &v }("TaxonomyDatabase"),
			Field: []*descriptor.FieldDescriptorProto{{Name: func(v string) *string { return &v }("Entries"),
				Number:   func(v int32) *int32 { return &v }(1),
				Label:    func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(3),
				Type:     func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(11),
				TypeName: func(v string) *string { return &v }(".tests.Entry"),
			}},
			Options: &descriptor.MessageOptions{XXX_extensions: map[int32]proto.Extension{64014: proto.NewExtension([]byte{0xf0, 0xa0, 0x1f, 0x1})}},
		}, {Name: func(v string) *string { return &v }("Entry"),
			Field: []*descriptor.FieldDescriptorProto{{Name: func(v string) *string { return &v }("TaxonomyId"),
				Number: func(v int32) *int32 { return &v }(1),
				Label:  func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(1),
				Type:   func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(9),
			}, {Name: func(v string) *string { return &v }("InheritedBlastName"),
				Number: func(v int32) *int32 { return &v }(2),
				Label:  func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(1),
				Type:   func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(9),
			}, {Name: func(v string) *string { return &v }("Rank"),
				Number: func(v int32) *int32 { return &v }(3),
				Label:  func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(1),
				Type:   func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(9),
			}, {Name: func(v string) *string { return &v }("GeneticCode"),
				Number:   func(v int32) *int32 { return &v }(4),
				Label:    func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(1),
				Type:     func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(11),
				TypeName: func(v string) *string { return &v }(".tests.GeneticCode"),
			}, {Name: func(v string) *string { return &v }("OtherNames"),
				Number: func(v int32) *int32 { return &v }(5),
				Label:  func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(3),
				Type:   func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(9),
			}, {Name: func(v string) *string { return &v }("Synonym"),
				Number: func(v int32) *int32 { return &v }(6),
				Label:  func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(1),
				Type:   func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(9),
			}, {Name: func(v string) *string { return &v }("Lineage"),
				Number:   func(v int32) *int32 { return &v }(7),
				Label:    func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(3),
				Type:     func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(11),
				TypeName: func(v string) *string { return &v }(".tests.Link"),
			}, {Name: func(v string) *string { return &v }("CommentsAndReferences"),
				Number:   func(v int32) *int32 { return &v }(8),
				Label:    func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(3),
				Type:     func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(11),
				TypeName: func(v string) *string { return &v }(".tests.CommentAndReference"),
			}, {Name: func(v string) *string { return &v }("GenomeInformation"),
				Number:   func(v int32) *int32 { return &v }(9),
				Label:    func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(1),
				Type:     func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(11),
				TypeName: func(v string) *string { return &v }(".tests.GenomeInformation"),
			}, {Name: func(v string) *string { return &v }("ExternalInformationResources"),
				Number:   func(v int32) *int32 { return &v }(10),
				Label:    func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(3),
				Type:     func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(11),
				TypeName: func(v string) *string { return &v }(".tests.ExternalInformationResources"),
			}, {Name: func(v string) *string { return &v }("Records"),
				Number:   func(v int32) *int32 { return &v }(11),
				Label:    func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(3),
				Type:     func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(11),
				TypeName: func(v string) *string { return &v }(".tests.Records"),
			}},
		}, {Name: func(v string) *string { return &v }("Records"),
			Field: []*descriptor.FieldDescriptorProto{{Name: func(v string) *string { return &v }("DatabaseName"),
				Number: func(v int32) *int32 { return &v }(1),
				Label:  func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(1),
				Type:   func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(9),
			}, {Name: func(v string) *string { return &v }("References"),
				Number:   func(v int32) *int32 { return &v }(2),
				Label:    func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(3),
				Type:     func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(11),
				TypeName: func(v string) *string { return &v }(".tests.Reference"),
			}},
		}, {Name: func(v string) *string { return &v }("Reference"),
			Field: []*descriptor.FieldDescriptorProto{{Name: func(v string) *string { return &v }("Name"),
				Number:   func(v int32) *int32 { return &v }(1),
				Label:    func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(1),
				Type:     func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(11),
				TypeName: func(v string) *string { return &v }(".tests.Link"),
			}, {Name: func(v string) *string { return &v }("Accession"),
				Number: func(v int32) *int32 { return &v }(2),
				Label:  func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(1),
				Type:   func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(9),
			}, {Name: func(v string) *string { return &v }("GI"),
				Number: func(v int32) *int32 { return &v }(3),
				Label:  func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(1),
				Type:   func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(9),
			}, {Name: func(v string) *string { return &v }("Links"),
				Number:   func(v int32) *int32 { return &v }(4),
				Label:    func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(3),
				Type:     func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(11),
				TypeName: func(v string) *string { return &v }(".tests.Link"),
			}},
		}, {Name: func(v string) *string { return &v }("Link"),
			Field: []*descriptor.FieldDescriptorProto{{Name: func(v string) *string { return &v }("Name"),
				Number: func(v int32) *int32 { return &v }(1),
				Label:  func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(1),
				Type:   func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(9),
			}, {Name: func(v string) *string { return &v }("Link"),
				Number: func(v int32) *int32 { return &v }(2),
				Label:  func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(1),
				Type:   func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(9),
			}},
		}, {Name: func(v string) *string { return &v }("GeneticCode"),
			Field: []*descriptor.FieldDescriptorProto{{Name: func(v string) *string { return &v }("TranslationTable"),
				Number: func(v int32) *int32 { return &v }(1),
				Label:  func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(1),
				Type:   func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(5),
			}, {Name: func(v string) *string { return &v }("Type"),
				Number: func(v int32) *int32 { return &v }(2),
				Label:  func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(1),
				Type:   func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(9),
			}},
		}, {Name: func(v string) *string { return &v }("CommentAndReference"),
			Field: []*descriptor.FieldDescriptorProto{{Name: func(v string) *string { return &v }("Heading"),
				Number: func(v int32) *int32 { return &v }(1),
				Label:  func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(1),
				Type:   func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(9),
			}, {Name: func(v string) *string { return &v }("Content"),
				Number: func(v int32) *int32 { return &v }(2),
				Label:  func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(1),
				Type:   func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(9),
			}, {Name: func(v string) *string { return &v }("Reference"),
				Number:   func(v int32) *int32 { return &v }(3),
				Label:    func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(1),
				Type:     func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(11),
				TypeName: func(v string) *string { return &v }(".tests.Link"),
			}},
		}, {Name: func(v string) *string { return &v }("GenomeInformation"),
			Field: []*descriptor.FieldDescriptorProto{{Name: func(v string) *string { return &v }("Type"),
				Number:   func(v int32) *int32 { return &v }(1),
				Label:    func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(1),
				Type:     func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(14),
				TypeName: func(v string) *string { return &v }(".tests.GenomeInformationType"),
			}, {Name: func(v string) *string { return &v }("Programs"),
				Number:   func(v int32) *int32 { return &v }(2),
				Label:    func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(3),
				Type:     func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(11),
				TypeName: func(v string) *string { return &v }(".tests.Link"),
			}},
		}, {Name: func(v string) *string { return &v }("ExternalInformationResources"),
			Field: []*descriptor.FieldDescriptorProto{{Name: func(v string) *string { return &v }("LinkOut"),
				Number:   func(v int32) *int32 { return &v }(1),
				Label:    func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(1),
				Type:     func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(11),
				TypeName: func(v string) *string { return &v }(".tests.Link"),
			}, {Name: func(v string) *string { return &v }("Subject"),
				Number:   func(v int32) *int32 { return &v }(2),
				Label:    func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(1),
				Type:     func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(14),
				TypeName: func(v string) *string { return &v }(".tests.Subject"),
			}, {Name: func(v string) *string { return &v }("LinkOutProvider"),
				Number:   func(v int32) *int32 { return &v }(3),
				Label:    func(v descriptor.FieldDescriptorProto_Label) *descriptor.FieldDescriptorProto_Label { return &v }(1),
				Type:     func(v descriptor.FieldDescriptorProto_Type) *descriptor.FieldDescriptorProto_Type { return &v }(11),
				TypeName: func(v string) *string { return &v }(".tests.Link"),
			}},
		}},
		EnumType: []*descriptor.EnumDescriptorProto{{Name: func(v string) *string { return &v }("GenomeInformationType"),
			Value: []*descriptor.EnumValueDescriptorProto{{Name: func(v string) *string { return &v }("NONE"),
				Number: func(v int32) *int32 { return &v }(1),
			}, {Name: func(v string) *string { return &v }("BLAST"),
				Number: func(v int32) *int32 { return &v }(2),
			}},
		}, {Name: func(v string) *string { return &v }("Subject"),
			Value: []*descriptor.EnumValueDescriptorProto{{Name: func(v string) *string { return &v }("Unknown"),
				Number: func(v int32) *int32 { return &v }(1),
			}, {Name: func(v string) *string { return &v }("OrganismSpecific"),
				Number: func(v int32) *int32 { return &v }(2),
			}},
		}},
		Options: &descriptor.FileOptions{XXX_extensions: map[int32]proto.Extension{63006: proto.NewExtension([]byte{0xf0, 0xe1, 0x1e, 0x1}), 63007: proto.NewExtension([]byte{0xf8, 0xe1, 0x1e, 0x1})}},
	}},
	}
}
func (this *TaxonomyDatabase) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&tests.TaxonomyDatabase{")
	if this.Entries != nil {
		s = append(s, "Entries: "+fmt.Sprintf("%#v", this.Entries)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *Entry) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 15)
	s = append(s, "&tests.Entry{")
	if this.TaxonomyId != nil {
		s = append(s, "TaxonomyId: "+valueToGoStringTaxonomy(this.TaxonomyId, "string")+",\n")
	}
	if this.InheritedBlastName != nil {
		s = append(s, "InheritedBlastName: "+valueToGoStringTaxonomy(this.InheritedBlastName, "string")+",\n")
	}
	if this.Rank != nil {
		s = append(s, "Rank: "+valueToGoStringTaxonomy(this.Rank, "string")+",\n")
	}
	if this.GeneticCode != nil {
		s = append(s, "GeneticCode: "+fmt.Sprintf("%#v", this.GeneticCode)+",\n")
	}
	if this.OtherNames != nil {
		s = append(s, "OtherNames: "+fmt.Sprintf("%#v", this.OtherNames)+",\n")
	}
	if this.Synonym != nil {
		s = append(s, "Synonym: "+valueToGoStringTaxonomy(this.Synonym, "string")+",\n")
	}
	if this.Lineage != nil {
		s = append(s, "Lineage: "+fmt.Sprintf("%#v", this.Lineage)+",\n")
	}
	if this.CommentsAndReferences != nil {
		s = append(s, "CommentsAndReferences: "+fmt.Sprintf("%#v", this.CommentsAndReferences)+",\n")
	}
	if this.GenomeInformation != nil {
		s = append(s, "GenomeInformation: "+fmt.Sprintf("%#v", this.GenomeInformation)+",\n")
	}
	if this.ExternalInformationResources != nil {
		s = append(s, "ExternalInformationResources: "+fmt.Sprintf("%#v", this.ExternalInformationResources)+",\n")
	}
	if this.Records != nil {
		s = append(s, "Records: "+fmt.Sprintf("%#v", this.Records)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *Records) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&tests.Records{")
	if this.DatabaseName != nil {
		s = append(s, "DatabaseName: "+valueToGoStringTaxonomy(this.DatabaseName, "string")+",\n")
	}
	if this.References != nil {
		s = append(s, "References: "+fmt.Sprintf("%#v", this.References)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *Reference) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&tests.Reference{")
	if this.Name != nil {
		s = append(s, "Name: "+fmt.Sprintf("%#v", this.Name)+",\n")
	}
	if this.Accession != nil {
		s = append(s, "Accession: "+valueToGoStringTaxonomy(this.Accession, "string")+",\n")
	}
	if this.GI != nil {
		s = append(s, "GI: "+valueToGoStringTaxonomy(this.GI, "string")+",\n")
	}
	if this.Links != nil {
		s = append(s, "Links: "+fmt.Sprintf("%#v", this.Links)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *Link) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&tests.Link{")
	if this.Name != nil {
		s = append(s, "Name: "+valueToGoStringTaxonomy(this.Name, "string")+",\n")
	}
	if this.Link != nil {
		s = append(s, "Link: "+valueToGoStringTaxonomy(this.Link, "string")+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *GeneticCode) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&tests.GeneticCode{")
	if this.TranslationTable != nil {
		s = append(s, "TranslationTable: "+valueToGoStringTaxonomy(this.TranslationTable, "int32")+",\n")
	}
	if this.Type != nil {
		s = append(s, "Type: "+valueToGoStringTaxonomy(this.Type, "string")+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *CommentAndReference) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&tests.CommentAndReference{")
	if this.Heading != nil {
		s = append(s, "Heading: "+valueToGoStringTaxonomy(this.Heading, "string")+",\n")
	}
	if this.Content != nil {
		s = append(s, "Content: "+valueToGoStringTaxonomy(this.Content, "string")+",\n")
	}
	if this.Reference != nil {
		s = append(s, "Reference: "+fmt.Sprintf("%#v", this.Reference)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *GenomeInformation) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&tests.GenomeInformation{")
	if this.Type != nil {
		s = append(s, "Type: "+valueToGoStringTaxonomy(this.Type, "tests.GenomeInformationType")+",\n")
	}
	if this.Programs != nil {
		s = append(s, "Programs: "+fmt.Sprintf("%#v", this.Programs)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *ExternalInformationResources) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&tests.ExternalInformationResources{")
	if this.LinkOut != nil {
		s = append(s, "LinkOut: "+fmt.Sprintf("%#v", this.LinkOut)+",\n")
	}
	if this.Subject != nil {
		s = append(s, "Subject: "+valueToGoStringTaxonomy(this.Subject, "tests.Subject")+",\n")
	}
	if this.LinkOutProvider != nil {
		s = append(s, "LinkOutProvider: "+fmt.Sprintf("%#v", this.LinkOutProvider)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func valueToGoStringTaxonomy(v interface{}, typ string) string {
	rv := reflect.ValueOf(v)
	if rv.IsNil() {
		return "nil"
	}
	pv := reflect.Indirect(rv).Interface()
	return fmt.Sprintf("func(v %v) *%v { return &v } ( %#v )", typ, typ, pv)
}
func extensionToGoStringTaxonomy(e map[int32]github_com_gogo_protobuf_proto.Extension) string {
	if e == nil {
		return "nil"
	}
	s := "map[int32]proto.Extension{"
	keys := make([]int, 0, len(e))
	for k := range e {
		keys = append(keys, int(k))
	}
	sort.Ints(keys)
	ss := []string{}
	for _, k := range keys {
		ss = append(ss, strconv.Itoa(k)+": "+e[int32(k)].GoString())
	}
	s += strings.Join(ss, ",") + "}"
	return s
}
func NewPopulatedTaxonomyDatabase(r randyTaxonomy, easy bool) *TaxonomyDatabase {
	this := &TaxonomyDatabase{}
	if r.Intn(10) != 0 {
		v1 := r.Intn(10)
		this.Entries = make([]*Entry, v1)
		for i := 0; i < v1; i++ {
			this.Entries[i] = NewPopulatedEntry(r, easy)
		}
	}
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedTaxonomy(r, 2)
	}
	return this
}

func NewPopulatedEntry(r randyTaxonomy, easy bool) *Entry {
	this := &Entry{}
	if r.Intn(10) != 0 {
		v2 := randStringTaxonomy(r)
		this.TaxonomyId = &v2
	}
	if r.Intn(10) != 0 {
		v3 := randStringTaxonomy(r)
		this.InheritedBlastName = &v3
	}
	if r.Intn(10) != 0 {
		v4 := randStringTaxonomy(r)
		this.Rank = &v4
	}
	if r.Intn(10) != 0 {
		this.GeneticCode = NewPopulatedGeneticCode(r, easy)
	}
	if r.Intn(10) != 0 {
		v5 := r.Intn(10)
		this.OtherNames = make([]string, v5)
		for i := 0; i < v5; i++ {
			this.OtherNames[i] = randStringTaxonomy(r)
		}
	}
	if r.Intn(10) != 0 {
		v6 := randStringTaxonomy(r)
		this.Synonym = &v6
	}
	if r.Intn(10) != 0 {
		v7 := r.Intn(10)
		this.Lineage = make([]*Link, v7)
		for i := 0; i < v7; i++ {
			this.Lineage[i] = NewPopulatedLink(r, easy)
		}
	}
	if r.Intn(10) != 0 {
		v8 := r.Intn(10)
		this.CommentsAndReferences = make([]*CommentAndReference, v8)
		for i := 0; i < v8; i++ {
			this.CommentsAndReferences[i] = NewPopulatedCommentAndReference(r, easy)
		}
	}
	if r.Intn(10) != 0 {
		this.GenomeInformation = NewPopulatedGenomeInformation(r, easy)
	}
	if r.Intn(10) != 0 {
		v9 := r.Intn(10)
		this.ExternalInformationResources = make([]*ExternalInformationResources, v9)
		for i := 0; i < v9; i++ {
			this.ExternalInformationResources[i] = NewPopulatedExternalInformationResources(r, easy)
		}
	}
	if r.Intn(10) != 0 {
		v10 := r.Intn(10)
		this.Records = make([]*Records, v10)
		for i := 0; i < v10; i++ {
			this.Records[i] = NewPopulatedRecords(r, easy)
		}
	}
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedTaxonomy(r, 12)
	}
	return this
}

func NewPopulatedRecords(r randyTaxonomy, easy bool) *Records {
	this := &Records{}
	if r.Intn(10) != 0 {
		v11 := randStringTaxonomy(r)
		this.DatabaseName = &v11
	}
	if r.Intn(10) != 0 {
		v12 := r.Intn(10)
		this.References = make([]*Reference, v12)
		for i := 0; i < v12; i++ {
			this.References[i] = NewPopulatedReference(r, easy)
		}
	}
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedTaxonomy(r, 3)
	}
	return this
}

func NewPopulatedReference(r randyTaxonomy, easy bool) *Reference {
	this := &Reference{}
	if r.Intn(10) != 0 {
		this.Name = NewPopulatedLink(r, easy)
	}
	if r.Intn(10) != 0 {
		v13 := randStringTaxonomy(r)
		this.Accession = &v13
	}
	if r.Intn(10) != 0 {
		v14 := randStringTaxonomy(r)
		this.GI = &v14
	}
	if r.Intn(10) != 0 {
		v15 := r.Intn(10)
		this.Links = make([]*Link, v15)
		for i := 0; i < v15; i++ {
			this.Links[i] = NewPopulatedLink(r, easy)
		}
	}
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedTaxonomy(r, 5)
	}
	return this
}

func NewPopulatedLink(r randyTaxonomy, easy bool) *Link {
	this := &Link{}
	if r.Intn(10) != 0 {
		v16 := randStringTaxonomy(r)
		this.Name = &v16
	}
	if r.Intn(10) != 0 {
		v17 := randStringTaxonomy(r)
		this.Link = &v17
	}
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedTaxonomy(r, 3)
	}
	return this
}

func NewPopulatedGeneticCode(r randyTaxonomy, easy bool) *GeneticCode {
	this := &GeneticCode{}
	if r.Intn(10) != 0 {
		v18 := int32(r.Int31())
		if r.Intn(2) == 0 {
			v18 *= -1
		}
		this.TranslationTable = &v18
	}
	if r.Intn(10) != 0 {
		v19 := randStringTaxonomy(r)
		this.Type = &v19
	}
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedTaxonomy(r, 3)
	}
	return this
}

func NewPopulatedCommentAndReference(r randyTaxonomy, easy bool) *CommentAndReference {
	this := &CommentAndReference{}
	if r.Intn(10) != 0 {
		v20 := randStringTaxonomy(r)
		this.Heading = &v20
	}
	if r.Intn(10) != 0 {
		v21 := randStringTaxonomy(r)
		this.Content = &v21
	}
	if r.Intn(10) != 0 {
		this.Reference = NewPopulatedLink(r, easy)
	}
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedTaxonomy(r, 4)
	}
	return this
}

func NewPopulatedGenomeInformation(r randyTaxonomy, easy bool) *GenomeInformation {
	this := &GenomeInformation{}
	if r.Intn(10) != 0 {
		v22 := GenomeInformationType([]int32{1, 2}[r.Intn(2)])
		this.Type = &v22
	}
	if r.Intn(10) != 0 {
		v23 := r.Intn(10)
		this.Programs = make([]*Link, v23)
		for i := 0; i < v23; i++ {
			this.Programs[i] = NewPopulatedLink(r, easy)
		}
	}
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedTaxonomy(r, 3)
	}
	return this
}

func NewPopulatedExternalInformationResources(r randyTaxonomy, easy bool) *ExternalInformationResources {
	this := &ExternalInformationResources{}
	if r.Intn(10) != 0 {
		this.LinkOut = NewPopulatedLink(r, easy)
	}
	if r.Intn(10) != 0 {
		v24 := Subject([]int32{1, 2}[r.Intn(2)])
		this.Subject = &v24
	}
	if r.Intn(10) != 0 {
		this.LinkOutProvider = NewPopulatedLink(r, easy)
	}
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedTaxonomy(r, 4)
	}
	return this
}

type randyTaxonomy interface {
	Float32() float32
	Float64() float64
	Int63() int64
	Int31() int32
	Uint32() uint32
	Intn(n int) int
}

func randUTF8RuneTaxonomy(r randyTaxonomy) rune {
	ru := r.Intn(62)
	if ru < 10 {
		return rune(ru + 48)
	} else if ru < 36 {
		return rune(ru + 55)
	}
	return rune(ru + 61)
}
func randStringTaxonomy(r randyTaxonomy) string {
	v25 := r.Intn(100)
	tmps := make([]rune, v25)
	for i := 0; i < v25; i++ {
		tmps[i] = randUTF8RuneTaxonomy(r)
	}
	return string(tmps)
}
func randUnrecognizedTaxonomy(r randyTaxonomy, maxFieldNumber int) (data []byte) {
	l := r.Intn(5)
	for i := 0; i < l; i++ {
		wire := r.Intn(4)
		if wire == 3 {
			wire = 5
		}
		fieldNumber := maxFieldNumber + r.Intn(100)
		data = randFieldTaxonomy(data, r, fieldNumber, wire)
	}
	return data
}
func randFieldTaxonomy(data []byte, r randyTaxonomy, fieldNumber int, wire int) []byte {
	key := uint32(fieldNumber)<<3 | uint32(wire)
	switch wire {
	case 0:
		data = encodeVarintPopulateTaxonomy(data, uint64(key))
		v26 := r.Int63()
		if r.Intn(2) == 0 {
			v26 *= -1
		}
		data = encodeVarintPopulateTaxonomy(data, uint64(v26))
	case 1:
		data = encodeVarintPopulateTaxonomy(data, uint64(key))
		data = append(data, byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)))
	case 2:
		data = encodeVarintPopulateTaxonomy(data, uint64(key))
		ll := r.Intn(100)
		data = encodeVarintPopulateTaxonomy(data, uint64(ll))
		for j := 0; j < ll; j++ {
			data = append(data, byte(r.Intn(256)))
		}
	default:
		data = encodeVarintPopulateTaxonomy(data, uint64(key))
		data = append(data, byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)))
	}
	return data
}
func encodeVarintPopulateTaxonomy(data []byte, v uint64) []byte {
	for v >= 1<<7 {
		data = append(data, uint8(uint64(v)&0x7f|0x80))
		v >>= 7
	}
	data = append(data, uint8(v))
	return data
}
