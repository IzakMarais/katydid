Equal
  : "="  << &expr.Keyword{Value: "="}, nil >>
  | Space "=" << 
    &expr.Keyword{
      Before: $0.(*expr.Space),
      Value: "=",
    }, nil
  >>
  ;

OpenParen
  : "(" << &expr.Keyword{Value: "("}, nil >>
  | Space "(" << 
    &expr.Keyword{
      Before: $0.(*expr.Space),
      Value: "(",
    }, nil
  >>
  ;

CloseParen
  : ")" << &expr.Keyword{Value: ")"}, nil >>
  | Space ")" << 
    &expr.Keyword{
      Before: $0.(*expr.Space),
      Value: ")",
    }, nil
  >>
  ;

OpenCurly
  : "{" << &expr.Keyword{Value: "{"}, nil >>
  | Space "{" << 
    &expr.Keyword{
      Before: $0.(*expr.Space),
      Value: "{",
    }, nil
  >>
  ;

CloseCurly
  : "}" << &expr.Keyword{Value: "}"}, nil >>
  | Space "}" << 
    &expr.Keyword{
      Before: $0.(*expr.Space),
      Value: "}",
    }, nil
  >>
  ;

Comma
  : "," << &expr.Keyword{Value: ","}, nil >>
  | Space "," << 
    &expr.Keyword{
      Before: $0.(*expr.Space),
      Value: ",",
    }, nil
  >>
  ;

SemiColon
  : ";" << &expr.Keyword{Value: ";"}, nil >>
  | Space ";" << 
    &expr.Keyword{
      Before: $0.(*expr.Space),
      Value: ";",
    }, nil
  >>
  ;

Hash
  : "#" << &expr.Keyword{Value: "#"}, nil >>
  | Space "#" << 
    &expr.Keyword{
      Before: $0.(*expr.Space),
      Value: "#",
    }, nil
  >>
  ;

Ampersand
  : "&" << &expr.Keyword{Value: "&"}, nil >>
  | Space "&" << 
    &expr.Keyword{
      Before: $0.(*expr.Space),
      Value: "&",
    }, nil
  >>
  ;

Pipe
  : "|" << &expr.Keyword{Value: "|"}, nil >>
  | Space "|" << 
    &expr.Keyword{
      Before: $0.(*expr.Space),
      Value: "|",
    }, nil
  >>
  ;

OpenBracket
  : "[" << &expr.Keyword{Value: "["}, nil >>
  | Space "[" << 
    &expr.Keyword{
      Before: $0.(*expr.Space),
      Value: "[",
    }, nil
  >>
  ;

CloseBracket
  : "]" << &expr.Keyword{Value: "]"}, nil >>
  | Space "]" << 
    &expr.Keyword{
      Before: $0.(*expr.Space),
      Value: "]",
    }, nil
  >>
  ;

Colon
  : ":" << &expr.Keyword{Value: ":"}, nil >>
  | Space ":" << 
    &expr.Keyword{
      Before: $0.(*expr.Space),
      Value: ":",
    }, nil
  >>
  ;

Exclamation
  : "!" << &expr.Keyword{Value: "!"}, nil >>
  | Space "!" << 
    &expr.Keyword{
      Before: $0.(*expr.Space),
      Value: "!",
    }, nil
  >>
  ;

Star
  : "*" << &expr.Keyword{Value: "*"}, nil >>
  | Space "*" << 
    &expr.Keyword{
      Before: $0.(*expr.Space),
      Value: "*",
    }, nil
  >>
  ;

Underscore
  : "_" << &expr.Keyword{Value: "_"}, nil >>
  | Space "_" << 
    &expr.Keyword{
      Before: $0.(*expr.Space),
      Value: "_",
    }, nil
  >>
  ;

Tilde
  : "~" << &expr.Keyword{Value: "~"}, nil >>
  | Space "~" << 
    &expr.Keyword{
      Before: $0.(*expr.Space),
      Value: "~",
    }, nil
  >>
  ;

Dot
  : "." << &expr.Keyword{Value: "."}, nil >>
  | Space "." << 
    &expr.Keyword{
      Before: $0.(*expr.Space),
      Value: ".",
    }, nil
  >>
  ;

At
  : "@" << &expr.Keyword{Value: "@"}, nil >>
  | Space "@" << 
    &expr.Keyword{
      Before: $0.(*expr.Space),
      Value: "@",
    }, nil
  >>
  ;

RightArrow
  : "->" << &expr.Keyword{Value: "->"}, nil >>
  | Space "->" << 
    &expr.Keyword{
      Before: $0.(*expr.Space),
      Value: "->",
    }, nil
  >>
  ;

EqualEqual
  : "=="  << &expr.Keyword{Value: "=="}, nil >>
  | Space "==" << 
    &expr.Keyword{
      Before: $0.(*expr.Space),
      Value: "==",
    }, nil
  >>
  ;

ExclamationEqual
  : "!="  << &expr.Keyword{Value: "!="}, nil >>
  | Space "!=" << 
    &expr.Keyword{
      Before: $0.(*expr.Space),
      Value: "!=",
    }, nil
  >>
  ;

LessThan
  : "<"  << &expr.Keyword{Value: "<"}, nil >>
  | Space "<" << 
    &expr.Keyword{
      Before: $0.(*expr.Space),
      Value: "<",
    }, nil
  >>
  ;

GreaterThan
  : ">"  << &expr.Keyword{Value: ">"}, nil >>
  | Space ">" << 
    &expr.Keyword{
      Before: $0.(*expr.Space),
      Value: ">",
    }, nil
  >>
  ;

LessEqual
  : "<="  << &expr.Keyword{Value: "<="}, nil >>
  | Space "<=" << 
    &expr.Keyword{
      Before: $0.(*expr.Space),
      Value: "<=",
    }, nil
  >>
  ;

GreaterEqual
  : ">="  << &expr.Keyword{Value: ">="}, nil >>
  | Space ">=" << 
    &expr.Keyword{
      Before: $0.(*expr.Space),
      Value: ">=",
    }, nil
  >>
  ;

TildeEqual
  : "~="  << &expr.Keyword{Value: "~="}, nil >>
  | Space "~=" << 
    &expr.Keyword{
      Before: $0.(*expr.Space),
      Value: "~=",
    }, nil
  >>
  ;

StarEqual
  : "*="  << &expr.Keyword{Value: "*="}, nil >>
  | Space "*=" << 
    &expr.Keyword{
      Before: $0.(*expr.Space),
      Value: "*=",
    }, nil
  >>
  ;

CaretEqual
  : "^="  << &expr.Keyword{Value: "^="}, nil >>
  | Space "^=" << 
    &expr.Keyword{
      Before: $0.(*expr.Space),
      Value: "^=",
    }, nil
  >>
  ;

DollarEqual
  : "$="  << &expr.Keyword{Value: "$="}, nil >>
  | Space "$=" << 
    &expr.Keyword{
      Before: $0.(*expr.Space),
      Value: "$=",
    }, nil
  >>
  ;

ColonColon
  : "::"  << &expr.Keyword{Value: "::"}, nil >>
  | Space "::" << 
    &expr.Keyword{
      Before: $0.(*expr.Space),
      Value: "::",
    }, nil
  >>
  ;

Space
  : Space space << expr.AppendSpace($0, newString($1)), nil >>
  | space << &expr.Space{Space: []string{newString($0)}}, nil >>
  ;
